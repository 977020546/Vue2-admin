{"version":3,"sources":["webpack:///./node_modules/core-js/internals/engine-ff-version.js","webpack:///./node_modules/core-js/internals/delete-property-or-throw.js","webpack:///./node_modules/core-js/internals/array-species-constructor.js","webpack:///./node_modules/core-js/modules/web.dom-collections.for-each.js","webpack:///./src/components/dataAnalysis/AnalyseMap.vue?4d1f","webpack:///./node_modules/core-js/internals/array-for-each.js","webpack:///./node_modules/core-js/internals/array-method-has-species-support.js","webpack:///./node_modules/core-js/internals/does-not-exceed-safe-integer.js","webpack:///./node_modules/core-js/internals/array-slice-simple.js","webpack:///./node_modules/core-js/modules/es.array.sort.js","webpack:///./node_modules/core-js/internals/engine-webkit-version.js","webpack:///./node_modules/core-js/internals/array-species-create.js","webpack:///./node_modules/core-js/internals/create-property.js","webpack:///./src/components/dataAnalysis/AnalyseMap.vue?dff7","webpack:///src/components/dataAnalysis/AnalyseMap.vue","webpack:///./src/components/dataAnalysis/AnalyseMap.vue?abd3","webpack:///./src/components/dataAnalysis/AnalyseMap.vue","webpack:///./node_modules/core-js/modules/es.array.concat.js","webpack:///./node_modules/core-js/internals/array-method-is-strict.js","webpack:///./node_modules/core-js/internals/array-sort.js","webpack:///./node_modules/core-js/modules/es.function.name.js","webpack:///./node_modules/core-js/internals/array-iteration.js","webpack:///./node_modules/core-js/modules/es.array.map.js","webpack:///./node_modules/core-js/internals/engine-is-ie-or-edge.js","webpack:///./node_modules/core-js/internals/is-array.js","webpack:///./node_modules/core-js/modules/es.array.slice.js"],"names":["userAgent","firefox","match","module","exports","tryToString","$TypeError","TypeError","O","P","isArray","isConstructor","isObject","wellKnownSymbol","SPECIES","$Array","Array","originalArray","C","constructor","prototype","undefined","global","DOMIterables","DOMTokenListPrototype","forEach","createNonEnumerableProperty","handlePrototype","CollectionPrototype","error","COLLECTION_NAME","$forEach","arrayMethodIsStrict","STRICT_METHOD","callbackfn","this","arguments","length","fails","V8_VERSION","METHOD_NAME","array","foo","Boolean","MAX_SAFE_INTEGER","it","toAbsoluteIndex","lengthOfArrayLike","createProperty","max","Math","start","end","k","fin","result","n","$","uncurryThis","aCallable","toObject","deletePropertyOrThrow","toString","internalSort","FF","IE_OR_EDGE","V8","WEBKIT","test","un$Sort","sort","push","FAILS_ON_UNDEFINED","FAILS_ON_NULL","STABLE_SORT","code","chr","value","index","String","fromCharCode","v","a","b","charAt","FORCED","getSortCompare","comparefn","x","y","target","proto","forced","itemsLength","items","arrayLength","webkit","arraySpeciesConstructor","toPropertyKey","definePropertyModule","createPropertyDescriptor","object","key","propertyKey","f","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","staticRenderFns","name","data","mounted","myChart","mapFeatures","geoCoordMap","console","min","minSize4Pin","res","title","text","subtext","textStyle","color","fontFamily","fontSize","subtextStyle","tooltip","trigger","formatter","toolTiphtml","toolTipData","visualMap","show","left","top","calculable","seriesIndex","inRange","toolbox","orient","feature","dataView","readOnly","restore","saveAsImage","geo","map","label","normal","emphasis","roam","itemStyle","areaColor","borderColor","series","type","coordinateSystem","symbolSize","position","geoIndex","aspectScale","showLegendSymbol","animation","symbol","zlevel","data1","slice","showEffectOn","rippleEffect","brushType","hoverAnimation","shadowBlur","shadowColor","time","baseOption","animationDurationUpdate","animationEasingUpdate","timeline","axisType","autoPlay","inverse","playInterval","right","bottom","width","height","lineStyle","checkpointStyle","borderWidth","controlStyle","showNextBtn","showPrevBtn","backgroundColor","grid","xAxis","yAxis","id","mapType","radius","center","roseType","labelLine","borderSize","options","restPercent","restValue","option1","dimension","itemWidth","boundaryGap","axisLabel","reverse","concat","myChart1","component","doesNotExceedSafeInteger","arraySpeciesCreate","arrayMethodHasSpeciesSupport","IS_CONCAT_SPREADABLE","IS_CONCAT_SPREADABLE_SUPPORT","SPECIES_SUPPORT","isConcatSpreadable","spreadable","arity","arg","i","len","E","A","argument","method","call","arraySlice","floor","mergeSort","middle","insertionSort","merge","element","j","llength","rlength","lindex","rindex","DESCRIPTORS","FUNCTION_NAME_EXISTS","EXISTS","defineProperty","FunctionPrototype","Function","functionToString","nameRE","regExpExec","exec","NAME","configurable","get","bind","IndexedObject","createMethod","TYPE","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","IS_FILTER_REJECT","NO_HOLES","$this","that","specificCreate","self","boundFunction","create","filter","some","every","find","findIndex","filterReject","$map","HAS_SPECIES_SUPPORT","UA","classof","toIndexedObject","un$Slice","Constructor"],"mappings":"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C,UACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,WACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,WAGA,KACA,GACA,CACAqC,UACArC,OACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,YAGA,CACAqC,UACArC,OACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,YAGA,CACAqC,UACArC,OACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,YAGA,CACAqC,UACArC,OACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,YAGA,CACAqC,WACArC,OACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,YAGA,CACAqC,UACArC,OACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,YAGA,CACAqC,UACArC,OACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,YAGA,CACAqC,WACArC,OACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,YAGA,CACAqC,UACArC,OACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,YAGA,CACAqC,UACArC,OACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,YAGA,CACAqC,UACArC,OACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,YAGA,CACAqC,UACArC,OACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,YAGA,CACAqC,UACArC,OACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,YAGA,CACAqC,UACArC,OACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,YAGA,CACAqC,UACArC,OACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,YAGA,CACAqC,UACArC,OACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,YAGA,CACAqC,UACArC,OACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,YAGA,CACAqC,UACArC,OACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,YAGA,CACAqC,UACArC,OACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,YAGA,CACAqC,UACArC,OACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,YAGA,CACAqC,UACArC,OACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,YAGA,CACAqC,UACArC,OACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,YAGA,CACAqC,UACArC,OACA,CAAAqC,UAAArC,SACA,CAAAqC,UAAArC,WAGA,CACAqC,UACArC,OACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,YAGA,CACAqC,UACArC,OACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,YAGA,CACAqC,UACArC,OACA,CAAAqC,UAAArC,SACA,CAAAqC,UAAArC,WAGA,CACAqC,UACArC,OACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,WAGA,CACAqC,UACArC,OACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,YAGA,CACAqC,UACArC,OACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,YAGA,CACAqC,UACArC,OACA,CAAAqC,UAAArC,UACA,CAAAqC,UAAArC,YAGA,CACAqC,UACArC,OACA,CAAAqC,UAAArC,SACA,CAAAqC,UAAArC,YAMAwC,gBACA,+CACAA,gBACAC,uBAEA,wBAEAC,wBAMAC,eACAA,eACA,UACAC,IACA,MACAC,KAEA,cAEA,IADA,SACA,oBACA,mBACA,GACAC,QACAT,eACArC,6BAIA,UAEA,GACA+C,OACAC,OACAC,UACAtC,WACAuC,WACAC,QACAC,aACAC,YAEAC,cACAD,WACAD,eAGAG,SACAC,eACAC,sBACA,mCAEA,IADA,SACA,mBAEA,GADAd,cACA,mBACAe,qBACA,oCACAf,+BACAe,GACAC,mBACA,IACAA,oBACA,OAMA,OAFAhB,eAEA,EAEA,2BACA,sBACAe,qBACA,oCACAA,GACAC,mBACA,IACAA,oBACA,OAMA,OAFAhB,eAEA,IAaAiB,WACAC,QACAjB,MACAxE,QACA0F,YACAC,aACAf,eACAgB,cACAC,gBACAC,SAMAf,8BASAgB,SACAN,QACAO,kBACAN,aACAC,aACAM,SACAC,UACAC,aAEAC,WACAC,iBAGAC,KACAb,QACAc,MACAC,OACAC,QACAhB,SAEAiB,UACAjB,UAGAkB,QACAC,WACAH,QACAI,oBACAC,uBAEAJ,UACAG,uBAIAE,QACA,CACA9C,UACA+C,eACAC,uBACA/C,UACAgD,uBACA,gBAEAV,OACAC,QACApB,gBACA8B,iBACA1B,SAEAiB,UACAjB,UAGAmB,WACAH,QACA1B,mBAIA,CACAiC,WACAT,MACAa,WACAC,gBACAC,oBACAd,OACAC,QACAhB,SAEAiB,UACAjB,QACAX,WACAC,gBAIA4B,QACAC,WACAH,QACAI,oBACAC,uBAEAJ,UACAG,sBAGAU,aACArD,QAEA,CACAD,SACA+C,eACAC,uBACAO,aACAN,uBACA,kBACA,QAEA,OADAhF,QACA,UAEAsE,OACAC,QACAhB,QACAX,WACAC,aACAE,cAIA2B,WACAH,QACA1B,kBAGA0C,SACAvD,WAEA,CACAD,aACA+C,qBACAC,uBACA/C,OACAwD,EACArG,MAAA,cACA,0BAEAsG,MAAA,MAEAT,uBACA,gBAEAU,sBACAC,cACAC,oBAEAC,kBACAvB,OACAC,QACApB,gBACA8B,iBACA1B,UAGAmB,WACAH,QACA1B,eACAiD,cACAC,uBAGAR,YAIArD,eAGA,2DACA,qCAk/DA,IAh/DA,OACA,CACA8D,OACAhE,MACA,CACAD,aACArC,uCAEA,CACAqC,aACArC,sCAEA,CACAqC,gBACArC,yCAEA,CACAqC,oBACArC,6CAEA,CACAqC,eACArC,wCAEA,CACAqC,qBACArC,8CAEA,CACAqC,mBACArC,2BAEA,CACAqC,uBACArC,+BAEA,CACAqC,eACArC,uBAEA,CACAqC,aACArC,qBAEA,CACAqC,mBACArC,2BAEA,CACAqC,mBACArC,2BAEA,CACAqC,iBACArC,yBAEA,CACAqC,aACArC,qBAEA,CACAqC,eACArC,uBAEA,CACAqC,cACArC,sBAEA,CACAqC,eACArC,uBAEA,CACAqC,YACArC,oBAEA,CACAqC,gBACArC,wBAEA,CACAqC,cACArC,sBAEA,CACAqC,wBACArC,gCAEA,CACAqC,gBACArC,wBAEA,CACAqC,YACArC,oBAEA,CACAqC,mBACArC,2BAEA,CACAqC,cACArC,sBAEA,CACAqC,gBACArC,wBAEA,CACAqC,kBACArC,0BAEA,CACAqC,cACArC,sBAEA,CACAqC,kBACArC,0BAEA,CACAqC,cACArC,wBAIA,CACAsG,OACAhE,MACA,CACAD,aACArC,wCAEA,CACAqC,gBACArC,yCAEA,CACAqC,eACArC,wCAEA,CACAqC,gBACArC,yCAEA,CACAqC,aACArC,sCAEA,CACAqC,iBACArC,0CAEA,CACAqC,iBACArC,0CAEA,CACAqC,qBACArC,6CAEA,CACAqC,cACArC,sCAEA,CACAqC,oBACArC,6CAEA,CACAqC,eACArC,wCAEA,CACAqC,4BACArC,qDAEA,CACAqC,eACArC,yCAEA,CACAqC,cACArC,wCAEA,CACAqC,eACArC,yCAEA,CACAqC,aACArC,uCAEA,CACAqC,gBACArC,0CAEA,CACAqC,iBACArC,2CAEA,CACAqC,mBACArC,2BAEA,CACAqC,iBACArC,yBAEA,CACAqC,eACArC,uBAEA,CACAqC,aACArC,qBAEA,CACAqC,mBACArC,2BAEA,CACAqC,mBACArC,2BAEA,CACAqC,uBACArC,+BAEA,CACAqC,cACArC,sBAEA,CACAqC,YACArC,oBAEA,CACAqC,cACArC,sBAEA,CACAqC,wBACArC,gCAEA,CACAqC,gBACArC,0BAIA,CACAsG,OACAhE,MACA,CACAD,aACArC,yCAEA,CACAqC,iBACArC,2CAEA,CACAqC,gBACArC,yCAEA,CACAqC,aACArC,uCAEA,CACAqC,oBACArC,8CAEA,CACAqC,iBACArC,2CAEA,CACAqC,gBACArC,0CAEA,CACAqC,eACArC,yCAEA,CACAqC,eACArC,yCAEA,CACAqC,qBACArC,+CAEA,CACAqC,eACArC,wCAEA,CACAqC,cACArC,wCAEA,CACAqC,cACArC,uCAEA,CACAqC,4BACArC,qDAEA,CACAqC,aACArC,uCAEA,CACAqC,mBACArC,6CAEA,CACAqC,sBACArC,gDAEA,CACAqC,aACArC,uCAEA,CACAqC,cACArC,wCAEA,CACAqC,gBACArC,2CAEA,CACAqC,cACArC,yCAEA,CACAqC,aACArC,wCAEA,CACAqC,eACArC,0CAEA,CACAqC,iBACArC,4CAEA,CACAqC,eACArC,0CAEA,CACAqC,aACArC,wCAEA,CACAqC,mBACArC,2BAEA,CACAqC,YACArC,oBAEA,CACAqC,iBACArC,yBAEA,CACAqC,aACArC,uBAIA,CACAsG,OACAhE,MACA,CACAD,aACArC,yCAEA,CACAqC,wBACArC,mDAEA,CACAqC,iBACArC,2CAEA,CACAqC,gBACArC,0CAEA,CACAqC,aACArC,uCAEA,CACAqC,oBACArC,8CAEA,CACAqC,gBACArC,0CAEA,CACAqC,eACArC,yCAEA,CACAqC,eACArC,yCAEA,CACAqC,eACArC,wCAEA,CACAqC,iBACArC,0CAEA,CACAqC,qBACArC,gDAEA,CACAqC,cACArC,yCAEA,CACAqC,sBACArC,gDAEA,CACAqC,4BACArC,sDAEA,CACAqC,cACArC,uCAEA,CACAqC,aACArC,uCAEA,CACAqC,mBACArC,6CAEA,CACAqC,aACArC,uCAEA,CACAqC,aACArC,uCAEA,CACAqC,cACArC,wCAEA,CACAqC,iBACArC,2CAEA,CACAqC,gBACArC,0CAEA,CACAqC,cACArC,wCAEA,CACAqC,aACArC,uCAEA,CACAqC,eACArC,yCAEA,CACAqC,eACArC,yCAEA,CACAqC,uBACArC,+BAEA,CACAqC,eACArC,uBAEA,CACAqC,aACArC,uBAIA,CACAsG,OACAhE,MACA,CACAD,aACArC,yCAEA,CACAqC,wBACArC,kDAEA,CACAqC,aACArC,uCAEA,CACAqC,iBACArC,2CAEA,CACAqC,gBACArC,2CAEA,CACAqC,oBACArC,+CAEA,CACAqC,eACArC,0CAEA,CACAqC,gBACArC,2CAEA,CACAqC,eACArC,0CAEA,CACAqC,eACArC,0CAEA,CACAqC,iBACArC,2CAEA,CACAqC,qBACArC,gDAEA,CACAqC,cACArC,yCAEA,CACAqC,sBACArC,+CAEA,CACAqC,4BACArC,qDAEA,CACAqC,cACArC,wCAEA,CACAqC,aACArC,wCAEA,CACAqC,aACArC,wCAEA,CACAqC,mBACArC,8CAEA,CACAqC,YACArC,sCAEA,CACAqC,aACArC,uCAEA,CACAqC,cACArC,wCAEA,CACAqC,iBACArC,4CAEA,CACAqC,cACArC,yCAEA,CACAqC,aACArC,wCAEA,CACAqC,gBACArC,2CAEA,CACAqC,aACArC,wCAEA,CACAqC,eACArC,0CAEA,CACAqC,eACArC,0CAEA,CACAqC,eACArC,yBAIA,CACAsG,OACAhE,MACA,CACAD,aACArC,yCAEA,CACAqC,oBACArC,gDAEA,CACAqC,wBACArC,kDAEA,CACAqC,aACArC,uCAEA,CACAqC,aACArC,uCAEA,CACAqC,YACArC,uCAEA,CACAqC,iBACArC,2CAEA,CACAqC,qBACArC,+CAEA,CACAqC,gBACArC,2CAEA,CACAqC,eACArC,0CAEA,CACAqC,eACArC,wCAEA,CACAqC,eACArC,yCAEA,CACAqC,cACArC,wCAEA,CACAqC,gBACArC,0CAEA,CACAqC,cACArC,wCAEA,CACAqC,eACArC,wCAEA,CACAqC,iBACArC,4CAEA,CACAqC,4BACArC,uDAEA,CACAqC,sBACArC,iDAEA,CACAqC,aACArC,wCAEA,CACAqC,cACArC,yCAEA,CACAqC,YACArC,uCAEA,CACAqC,YACArC,oCAEA,CACAqC,mBACArC,8CAEA,CACAqC,aACArC,wCAEA,CACAqC,eACArC,0CAEA,CACAqC,cACArC,uCAEA,CACAqC,cACArC,uCAEA,CACAqC,eACArC,wCAEA,CACAqC,cACArC,yCAIA,CACAsG,OACAhE,MACA,CACAD,aACArC,yCAEA,CACAqC,oBACArC,+CAEA,CACAqC,aACArC,yCAEA,CACAqC,YACArC,wCAEA,CACAqC,wBACArC,kDAEA,CACAqC,aACArC,uCAEA,CACAqC,cACArC,wCAEA,CACAqC,eACArC,0CAEA,CACAqC,aACArC,wCAEA,CACAqC,qBACArC,gDAEA,CACAqC,iBACArC,4CAEA,CACAqC,mBACArC,6CAEA,CACAqC,sBACArC,+CAEA,CACAqC,cACArC,wCAEA,CACAqC,cACArC,wCAEA,CACAqC,eACArC,0CAEA,CACAqC,iBACArC,4CAEA,CACAqC,gBACArC,2CAEA,CACAqC,gBACArC,0CAEA,CACAqC,eACArC,yCAEA,CACAqC,mBACArC,6CAEA,CACAqC,cACArC,yCAEA,CACAqC,YACArC,uCAEA,CACAqC,cACArC,yCAEA,CACAqC,eACArC,yCAEA,CACAqC,aACArC,uCAEA,CACAqC,4BACArC,qDAEA,CACAqC,eACArC,0CAEA,CACAqC,eACArC,0CAEA,CACAqC,eACArC,2CAIA,CACAsG,OACAhE,MACA,CACAD,aACArC,yCAEA,CACAqC,aACArC,yCAEA,CACAqC,YACArC,sCAEA,CACAqC,oBACArC,+CAEA,CACAqC,cACArC,yCAEA,CACAqC,aACArC,yCAEA,CACAqC,eACArC,2CAEA,CACAqC,qBACArC,iDAEA,CACAqC,wBACArC,kDAEA,CACAqC,mBACArC,4CAEA,CACAqC,aACArC,uCAEA,CACAqC,cACArC,yCAEA,CACAqC,mBACArC,8CAEA,CACAqC,cACArC,wCAEA,CACAqC,sBACArC,iDAEA,CACAqC,eACArC,0CAEA,CACAqC,eACArC,0CAEA,CACAqC,aACArC,wCAEA,CACAqC,eACArC,0CAEA,CACAqC,eACArC,0CAEA,CACAqC,iBACArC,4CAEA,CACAqC,gBACArC,2CAEA,CACAqC,iBACArC,4CAEA,CACAqC,cACArC,yCAEA,CACAqC,cACArC,wCAEA,CACAqC,eACArC,yCAEA,CACAqC,eACArC,yCAEA,CACAqC,cACArC,wCAEA,CACAqC,4BACArC,uDAEA,CACAqC,cACArC,0CAIA,CACAsG,OACAhE,MACA,CACAD,aACArC,0CAEA,CACAqC,aACArC,0CAEA,CACAqC,YACArC,wCAEA,CACAqC,aACArC,wCAEA,CACAqC,eACArC,2CAEA,CACAqC,cACArC,yCAEA,CACAqC,oBACArC,gDAEA,CACAqC,qBACArC,iDAEA,CACAqC,mBACArC,+CAEA,CACAqC,sBACArC,kDAEA,CACAqC,mBACArC,8CAEA,CACAqC,eACArC,0CAEA,CACAqC,cACArC,yCAEA,CACAqC,eACArC,0CAEA,CACAqC,cACArC,yCAEA,CACAqC,eACArC,0CAEA,CACAqC,aACArC,uCAEA,CACAqC,gBACArC,0CAEA,CACAqC,wBACArC,mDAEA,CACAqC,cACArC,yCAEA,CACAqC,iBACArC,4CAEA,CACAqC,eACArC,0CAEA,CACAqC,aACArC,wCAEA,CACAqC,gBACArC,2CAEA,CACAqC,cACArC,yCAEA,CACAqC,cACArC,yCAEA,CACAqC,eACArC,0CAEA,CACAqC,iBACArC,4CAEA,CACAqC,cACArC,yCAEA,CACAqC,gBACArC,4CAIA,CACAsG,OACAhE,MACA,CACAD,aACArC,0CAEA,CACAqC,aACArC,0CAEA,CACAqC,qBACArC,iDAEA,CACAqC,aACArC,0CAEA,CACAqC,eACArC,2CAEA,CACAqC,YACArC,yCAEA,CACAqC,cACArC,0CAEA,CACAqC,mBACArC,gDAEA,CACAqC,sBACArC,iDAEA,CACAqC,oBACArC,gDAEA,CACAqC,mBACArC,+CAEA,CACAqC,eACArC,2CAEA,CACAqC,eACArC,0CAEA,CACAqC,cACArC,yCAEA,CACAqC,cACArC,yCAEA,CACAqC,gBACArC,2CAEA,CACAqC,cACArC,yCAEA,CACAqC,cACArC,yCAEA,CACAqC,cACArC,yCAEA,CACAqC,cACArC,yCAEA,CACAqC,iBACArC,2CAEA,CACAqC,eACArC,0CAEA,CACAqC,gBACArC,2CAEA,CACAqC,eACArC,2CAEA,CACAqC,eACArC,2CAEA,CACAqC,kBACArC,6CAEA,CACAqC,aACArC,yCAEA,CACAqC,eACArC,0CAEA,CACAqC,aACArC,wCAEA,CACAqC,gBACArC,6CAIA,CACAsG,QACAhE,MACA,CACAD,qBACArC,kDAEA,CACAqC,aACArC,2CAEA,CACAqC,aACArC,2CAEA,CACAqC,aACArC,yCAEA,CACAqC,eACArC,2CAEA,CACAqC,cACArC,0CAEA,CACAqC,YACArC,wCAEA,CACAqC,sBACArC,kDAEA,CACAqC,mBACArC,+CAEA,CACAqC,cACArC,2CAEA,CACAqC,eACArC,4CAEA,CACAqC,mBACArC,gDAEA,CACAqC,eACArC,4CAEA,CACAqC,oBACArC,gDAEA,CACAqC,cACArC,0CAEA,CACAqC,gBACArC,2CAEA,CACAqC,cACArC,yCAEA,CACAqC,cACArC,yCAEA,CACAqC,cACArC,yCAEA,CACAqC,cACArC,uCAEA,CACAqC,iBACArC,4CAEA,CACAqC,eACArC,2CAEA,CACAqC,eACArC,0CAEA,CACAqC,eACArC,2CAEA,CACAqC,aACArC,wCAEA,CACAqC,gBACArC,4CAEA,CACAqC,cACArC,yCAEA,CACAqC,eACArC,2CAEA,CACAqC,cACArC,yCAEA,CACAqC,eACArC,4CAIA,CACAsG,QACAhE,MACA,CACAD,qBACArC,mDAEA,CACAqC,aACArC,2CAEA,CACAqC,aACArC,0CAEA,CACAqC,eACArC,4CAEA,CACAqC,cACArC,yCAEA,CACAqC,aACArC,wCAEA,CACAqC,YACArC,wCAEA,CACAqC,sBACArC,kDAEA,CACAqC,cACArC,0CAEA,CACAqC,eACArC,4CAEA,CACAqC,mBACArC,gDAEA,CACAqC,mBACArC,gDAEA,CACAqC,cACArC,2CAEA,CACAqC,cACArC,0CAEA,CACAqC,gBACArC,4CAEA,CACAqC,eACArC,2CAEA,CACAqC,oBACArC,gDAEA,CACAqC,cACArC,yCAEA,CACAqC,cACArC,yCAEA,CACAqC,cACArC,yCAEA,CACAqC,cACArC,yCAEA,CACAqC,eACArC,2CAEA,CACAqC,iBACArC,2CAEA,CACAqC,aACArC,yCAEA,CACAqC,eACArC,0CAEA,CACAqC,aACArC,wCAEA,CACAqC,eACArC,2CAEA,CACAqC,cACArC,yCAEA,CACAqC,eACArC,0CAEA,CACAqC,eACArC,4CAIA,CACAsG,QACAhE,MACA,CACAD,qBACArC,kDAEA,CACAqC,aACArC,0CAEA,CACAqC,aACArC,wCAEA,CACAqC,eACArC,6CAEA,CACAqC,cACArC,2CAEA,CACAqC,sBACArC,kDAEA,CACAqC,aACArC,yCAEA,CACAqC,YACArC,wCAEA,CACAqC,cACArC,yCAEA,CACAqC,eACArC,2CAEA,CACAqC,cACArC,2CAEA,CACAqC,mBACArC,gDAEA,CACAqC,cACArC,2CAEA,CACAqC,mBACArC,+CAEA,CACAqC,cACArC,0CAEA,CACAqC,gBACArC,4CAEA,CACAqC,eACArC,2CAEA,CACAqC,eACArC,2CAEA,CACAqC,cACArC,0CAEA,CACAqC,aACArC,wCAEA,CACAqC,cACArC,0CAEA,CACAqC,YACArC,wCAEA,CACAqC,oBACArC,gDAEA,CACAqC,aACArC,yCAEA,CACAqC,aACArC,yCAEA,CACAqC,eACArC,0CAEA,CACAqC,cACArC,0CAEA,CACAqC,eACArC,2CAEA,CACAqC,eACArC,2CAEA,CACAqC,cACArC,0CAIA,CACAsG,QACAhE,MACA,CACAD,qBACArC,mDAEA,CACAqC,aACArC,0CAEA,CACAqC,aACArC,0CAEA,CACAqC,cACArC,2CAEA,CACAqC,eACArC,4CAEA,CACAqC,sBACArC,mDAEA,CACAqC,cACArC,0CAEA,CACAqC,YACArC,wCAEA,CACAqC,aACArC,yCAEA,CACAqC,cACArC,2CAEA,CACAqC,cACArC,0CAEA,CACAqC,eACArC,4CAEA,CACAqC,cACArC,2CAEA,CACAqC,mBACArC,gDAEA,CACAqC,mBACArC,gDAEA,CACAqC,gBACArC,4CAEA,CACAqC,aACArC,yCAEA,CACAqC,YACArC,wCAEA,CACAqC,eACArC,2CAEA,CACAqC,cACArC,yCAEA,CACAqC,eACArC,2CAEA,CACAqC,cACArC,yCAEA,CACAqC,oBACArC,iDAEA,CACAqC,aACArC,yCAEA,CACAqC,aACArC,0CAEA,CACAqC,eACArC,2CAEA,CACAqC,oBACArC,iDAEA,CACAqC,cACArC,2CAEA,CACAqC,cACArC,2CAEA,CACAqC,iBACArC,+CAIA,CACAsG,QACAhE,MACA,CACAD,qBACArC,oDAEA,CACAqC,aACArC,0CAEA,CACAqC,aACArC,0CAEA,CACAqC,cACArC,2CAEA,CACAqC,sBACArC,oDAEA,CACAqC,eACArC,4CAEA,CACAqC,cACArC,4CAEA,CACAqC,cACArC,2CAEA,CACAqC,YACArC,yCAEA,CACAqC,aACArC,yCAEA,CACAqC,cACArC,2CAEA,CACAqC,cACArC,2CAEA,CACAqC,eACArC,2CAEA,CACAqC,mBACArC,gDAEA,CACAqC,YACArC,yCAEA,CACAqC,aACArC,0CAEA,CACAqC,mBACArC,+CAEA,CACAqC,eACArC,2CAEA,CACAqC,gBACArC,4CAEA,CACAqC,oBACArC,gDAEA,CACAqC,cACArC,0CAEA,CACAqC,eACArC,2CAEA,CACAqC,cACArC,0CAEA,CACAqC,cACArC,0CAEA,CACAqC,iBACArC,8CAEA,CACAqC,gBACArC,4CAEA,CACAqC,eACArC,4CAEA,CACAqC,aACArC,yCAEA,CACAqC,aACArC,yCAEA,CACAqC,eACArC,8CAMA,GACAuG,YACAC,4BACAC,qCACAC,UACAC,oBACAvC,kBACAwC,YACAC,WACAC,iBACAhD,UACAiD,QACAhD,OACAiD,UACAC,SACAC,YACAtC,OACAC,QACA3B,WACAC,eAGA2B,UACA5B,WACAC,gBAIAyC,cACAuB,WACAhE,cAEAiE,iBACAjE,aACA+B,mBACAmC,eAEAC,cACAC,eACAC,eACA3C,QACA1B,aACA+B,oBAEAJ,UACA3B,aACA+B,qBAGA5C,wBACA,kBAGAmF,0BACA1E,OACAC,sBACAC,iBACAa,cACAC,UACAb,WACAG,YACAF,iCAGAI,SACAE,sBACA,oBACA,8CAIAiE,MACA5D,UACAiD,YACAhD,UACAiD,WAEAW,SACAC,SACAzC,QACA,CACA0C,SACAzC,WACA0C,gBACA/D,UACAiD,aACAlD,QACAkB,WACAH,QACAI,oBACAC,uBAEAJ,UACAF,OACAf,SAEAoB,qCAGA3C,SAEA,CACAuF,SACAzC,WACA7B,SACAM,SAEAe,OACAC,QACAhB,QACA0B,iBACArC,WACAC,gBAIAb,SAEA,CACAuF,SACAzC,WACA2C,oBACAC,qBACAC,kBACA1E,SAC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","file":"js/chunk-a6ae0692.b55555e4.js","sourcesContent":["var userAgent = require('../internals/engine-user-agent');\n\nvar firefox = userAgent.match(/firefox\\/(\\d+)/i);\n\nmodule.exports = !!firefox && +firefox[1];\n","'use strict';\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (O, P) {\n  if (!delete O[P]) throw $TypeError('Cannot delete property ' + tryToString(P) + ' of ' + tryToString(O));\n};\n","var isArray = require('../internals/is-array');\nvar isConstructor = require('../internals/is-constructor');\nvar isObject = require('../internals/is-object');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\nvar $Array = Array;\n\n// a part of `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (isConstructor(C) && (C === $Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? $Array : C;\n};\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar DOMTokenListPrototype = require('../internals/dom-token-list-prototype');\nvar forEach = require('../internals/array-for-each');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar handlePrototype = function (CollectionPrototype) {\n  // some Chrome versions have non-configurable methods on DOMTokenList\n  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {\n    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);\n  } catch (error) {\n    CollectionPrototype.forEach = forEach;\n  }\n};\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  if (DOMIterables[COLLECTION_NAME]) {\n    handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype);\n  }\n}\n\nhandlePrototype(DOMTokenListPrototype);\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AnalyseMap.vue?vue&type=style&index=0&id=3a7822b5&scoped=true&lang=css&\"","'use strict';\nvar $forEach = require('../internals/array-iteration').forEach;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar STRICT_METHOD = arrayMethodIsStrict('forEach');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.foreach\nmodule.exports = !STRICT_METHOD ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n// eslint-disable-next-line es-x/no-array-prototype-foreach -- safe\n} : [].forEach;\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","var $TypeError = TypeError;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991\n\nmodule.exports = function (it) {\n  if (it > MAX_SAFE_INTEGER) throw $TypeError('Maximum allowed index exceeded');\n  return it;\n};\n","var toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar createProperty = require('../internals/create-property');\n\nvar $Array = Array;\nvar max = Math.max;\n\nmodule.exports = function (O, start, end) {\n  var length = lengthOfArrayLike(O);\n  var k = toAbsoluteIndex(start, length);\n  var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n  var result = $Array(max(fin - k, 0));\n  for (var n = 0; k < fin; k++, n++) createProperty(result, n, O[k]);\n  result.length = n;\n  return result;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar deletePropertyOrThrow = require('../internals/delete-property-or-throw');\nvar toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\nvar internalSort = require('../internals/array-sort');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar FF = require('../internals/engine-ff-version');\nvar IE_OR_EDGE = require('../internals/engine-is-ie-or-edge');\nvar V8 = require('../internals/engine-v8-version');\nvar WEBKIT = require('../internals/engine-webkit-version');\n\nvar test = [];\nvar un$Sort = uncurryThis(test.sort);\nvar push = uncurryThis(test.push);\n\n// IE8-\nvar FAILS_ON_UNDEFINED = fails(function () {\n  test.sort(undefined);\n});\n// V8 bug\nvar FAILS_ON_NULL = fails(function () {\n  test.sort(null);\n});\n// Old WebKit\nvar STRICT_METHOD = arrayMethodIsStrict('sort');\n\nvar STABLE_SORT = !fails(function () {\n  // feature detection can be too slow, so check engines versions\n  if (V8) return V8 < 70;\n  if (FF && FF > 3) return;\n  if (IE_OR_EDGE) return true;\n  if (WEBKIT) return WEBKIT < 603;\n\n  var result = '';\n  var code, chr, value, index;\n\n  // generate an array with more 512 elements (Chakra and old V8 fails only in this case)\n  for (code = 65; code < 76; code++) {\n    chr = String.fromCharCode(code);\n\n    switch (code) {\n      case 66: case 69: case 70: case 72: value = 3; break;\n      case 68: case 71: value = 4; break;\n      default: value = 2;\n    }\n\n    for (index = 0; index < 47; index++) {\n      test.push({ k: chr + index, v: value });\n    }\n  }\n\n  test.sort(function (a, b) { return b.v - a.v; });\n\n  for (index = 0; index < test.length; index++) {\n    chr = test[index].k.charAt(0);\n    if (result.charAt(result.length - 1) !== chr) result += chr;\n  }\n\n  return result !== 'DGBEFHACIJK';\n});\n\nvar FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD || !STABLE_SORT;\n\nvar getSortCompare = function (comparefn) {\n  return function (x, y) {\n    if (y === undefined) return -1;\n    if (x === undefined) return 1;\n    if (comparefn !== undefined) return +comparefn(x, y) || 0;\n    return toString(x) > toString(y) ? 1 : -1;\n  };\n};\n\n// `Array.prototype.sort` method\n// https://tc39.es/ecma262/#sec-array.prototype.sort\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  sort: function sort(comparefn) {\n    if (comparefn !== undefined) aCallable(comparefn);\n\n    var array = toObject(this);\n\n    if (STABLE_SORT) return comparefn === undefined ? un$Sort(array) : un$Sort(array, comparefn);\n\n    var items = [];\n    var arrayLength = lengthOfArrayLike(array);\n    var itemsLength, index;\n\n    for (index = 0; index < arrayLength; index++) {\n      if (index in array) push(items, array[index]);\n    }\n\n    internalSort(items, getSortCompare(comparefn));\n\n    itemsLength = items.length;\n    index = 0;\n\n    while (index < itemsLength) array[index] = items[index++];\n    while (index < arrayLength) deletePropertyOrThrow(array, index++);\n\n    return array;\n  }\n});\n","var userAgent = require('../internals/engine-user-agent');\n\nvar webkit = userAgent.match(/AppleWebKit\\/(\\d+)\\./);\n\nmodule.exports = !!webkit && +webkit[1];\n","var arraySpeciesConstructor = require('../internals/array-species-constructor');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);\n};\n","'use strict';\nvar toPropertyKey = require('../internals/to-property-key');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPropertyKey(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"AnalyseMap\"},[_c('el-card',{staticClass:\"card\"},[_c('div',{staticClass:\"bxo1\"},[_c('div',{attrs:{\"id\":\"main\"}}),_c('div',{attrs:{\"id\":\"main1\"}})])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"AnalyseMap\">\r\n    <el-card class=\"card\">\r\n      <div class=\"bxo1\">\r\n        <div id=\"main\"></div>\r\n        <div id=\"main1\"></div>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport chinaJson from \"echarts/map/json/china\";\r\nimport worldJson from \"echarts/map/json/world.json\";\r\nexport default {\r\n  name: \"AnalyseMap\",\r\n  data() {\r\n    return {};\r\n  },\r\n  mounted() {\r\n    // 中国地图\r\n    let myChart = this.$echarts.init(document.getElementById(\"main\"));\r\n    this.$echarts.registerMap(\"china\", chinaJson);\r\n\r\n    // 从这里开始复制示例的代码\r\n    var name_title = \"中国人民大学2017年各省市计划录取人数\";\r\n    var subname = \"上海、浙江无文理科录取人数\";\r\n    var nameColor = \" rgb(55, 75, 113)\";\r\n    var name_fontFamily = \"等线\";\r\n    var subname_fontSize = 15;\r\n    var name_fontSize = 18;\r\n    var mapName = \"china\";\r\n    var data1 = [\r\n      { name: \"北京\", value: 177 },\r\n      { name: \"天津\", value: 42 },\r\n      { name: \"河北\", value: 102 },\r\n      { name: \"山西\", value: 81 },\r\n      { name: \"内蒙古\", value: 47 },\r\n      { name: \"辽宁\", value: 67 },\r\n      { name: \"吉林\", value: 82 },\r\n      { name: \"黑龙江\", value: 66 },\r\n      { name: \"上海\", value: 24 },\r\n      { name: \"江苏\", value: 92 },\r\n      { name: \"浙江\", value: 114 },\r\n      { name: \"安徽\", value: 109 },\r\n      { name: \"福建\", value: 116 },\r\n      { name: \"江西\", value: 91 },\r\n      { name: \"山东\", value: 119 },\r\n      { name: \"河南\", value: 137 },\r\n      { name: \"湖北\", value: 116 },\r\n      { name: \"湖南\", value: 114 },\r\n      { name: \"重庆\", value: 91 },\r\n      { name: \"四川\", value: 125 },\r\n      { name: \"贵州\", value: 62 },\r\n      { name: \"云南\", value: 83 },\r\n      { name: \"西藏\", value: 9 },\r\n      { name: \"陕西\", value: 80 },\r\n      { name: \"甘肃\", value: 56 },\r\n      { name: \"青海\", value: 10 },\r\n      { name: \"宁夏\", value: 18 },\r\n      { name: \"新疆\", value: 67 },\r\n      { name: \"广东\", value: 123 },\r\n      { name: \"广西\", value: 59 },\r\n      { name: \"海南\", value: 14 },\r\n    ];\r\n\r\n    var geoCoordMap = {};\r\n    var toolTipData = [\r\n      {\r\n        name: \"北京\",\r\n        value: [\r\n          { name: \"文科\", value: 95 },\r\n          { name: \"理科\", value: 82 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"天津\",\r\n        value: [\r\n          { name: \"文科\", value: 22 },\r\n          { name: \"理科\", value: 20 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"河北\",\r\n        value: [\r\n          { name: \"文科\", value: 60 },\r\n          { name: \"理科\", value: 42 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"山西\",\r\n        value: [\r\n          { name: \"文科\", value: 40 },\r\n          { name: \"理科\", value: 41 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"内蒙古\",\r\n        value: [\r\n          { name: \"文科\", value: 23 },\r\n          { name: \"理科\", value: 24 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"辽宁\",\r\n        value: [\r\n          { name: \"文科\", value: 39 },\r\n          { name: \"理科\", value: 28 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"吉林\",\r\n        value: [\r\n          { name: \"文科\", value: 41 },\r\n          { name: \"理科\", value: 41 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"黑龙江\",\r\n        value: [\r\n          { name: \"文科\", value: 35 },\r\n          { name: \"理科\", value: 31 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"上海\",\r\n        value: [\r\n          { name: \"文科\", value: 12 },\r\n          { name: \"理科\", value: 12 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"江苏\",\r\n        value: [\r\n          { name: \"文科\", value: 47 },\r\n          { name: \"理科\", value: 45 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"浙江\",\r\n        value: [\r\n          { name: \"文科\", value: 57 },\r\n          { name: \"理科\", value: 57 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"安徽\",\r\n        value: [\r\n          { name: \"文科\", value: 57 },\r\n          { name: \"理科\", value: 52 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"福建\",\r\n        value: [\r\n          { name: \"文科\", value: 59 },\r\n          { name: \"理科\", value: 57 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"江西\",\r\n        value: [\r\n          { name: \"文科\", value: 49 },\r\n          { name: \"理科\", value: 42 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"山东\",\r\n        value: [\r\n          { name: \"文科\", value: 67 },\r\n          { name: \"理科\", value: 52 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"河南\",\r\n        value: [\r\n          { name: \"文科\", value: 69 },\r\n          { name: \"理科\", value: 68 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"湖北\",\r\n        value: [\r\n          { name: \"文科\", value: 60 },\r\n          { name: \"理科\", value: 56 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"湖南\",\r\n        value: [\r\n          { name: \"文科\", value: 62 },\r\n          { name: \"理科\", value: 52 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"重庆\",\r\n        value: [\r\n          { name: \"文科\", value: 47 },\r\n          { name: \"理科\", value: 44 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"四川\",\r\n        value: [\r\n          { name: \"文科\", value: 65 },\r\n          { name: \"理科\", value: 60 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"贵州\",\r\n        value: [\r\n          { name: \"文科\", value: 32 },\r\n          { name: \"理科\", value: 30 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"云南\",\r\n        value: [\r\n          { name: \"文科\", value: 42 },\r\n          { name: \"理科\", value: 41 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"西藏\",\r\n        value: [\r\n          { name: \"文科\", value: 5 },\r\n          { name: \"理科\", value: 4 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"陕西\",\r\n        value: [\r\n          { name: \"文科\", value: 38 },\r\n          { name: \"理科\", value: 42 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"甘肃\",\r\n        value: [\r\n          { name: \"文科\", value: 28 },\r\n          { name: \"理科\", value: 28 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"青海\",\r\n        value: [\r\n          { name: \"文科\", value: 5 },\r\n          { name: \"理科\", value: 5 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"宁夏\",\r\n        value: [\r\n          { name: \"文科\", value: 10 },\r\n          { name: \"理科\", value: 8 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"新疆\",\r\n        value: [\r\n          { name: \"文科\", value: 36 },\r\n          { name: \"理科\", value: 31 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"广东\",\r\n        value: [\r\n          { name: \"文科\", value: 63 },\r\n          { name: \"理科\", value: 60 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"广西\",\r\n        value: [\r\n          { name: \"文科\", value: 29 },\r\n          { name: \"理科\", value: 30 },\r\n        ],\r\n      },\r\n      {\r\n        name: \"海南\",\r\n        value: [\r\n          { name: \"文科\", value: 8 },\r\n          { name: \"理科\", value: 6 },\r\n        ],\r\n      },\r\n    ];\r\n\r\n    /*获取地图数据*/\r\n    myChart.showLoading();\r\n    var mapFeatures = this.$echarts.getMap(mapName).geoJson.features;\r\n    myChart.hideLoading();\r\n    mapFeatures.forEach(function (v) {\r\n      // 地区名称\r\n      var name = v.properties.name;\r\n      // 地区经纬度\r\n      geoCoordMap[name] = v.properties.cp;\r\n    });\r\n\r\n    // console.log(\"============geoCoordMap===================\")\r\n    // console.log(geoCoordMap)\r\n    // console.log(\"================data======================\")\r\n    console.log(data1);\r\n    console.log(toolTipData);\r\n    var max = 480,\r\n      min = 9; // todo\r\n    var maxSize4Pin = 100,\r\n      minSize4Pin = 20;\r\n\r\n    var convertData = function (data1) {\r\n      var res = [];\r\n      for (var i = 0; i < data1.length; i++) {\r\n        var geoCoord = geoCoordMap[data1[i].name];\r\n        if (geoCoord) {\r\n          res.push({\r\n            name: data1[i].name,\r\n            value: geoCoord.concat(data1[i].value),\r\n          });\r\n        }\r\n      }\r\n      return res;\r\n    };\r\n    let option = {\r\n      title: {\r\n        text: name_title,\r\n        subtext: subname,\r\n        x: \"center\",\r\n        textStyle: {\r\n          color: nameColor,\r\n          fontFamily: name_fontFamily,\r\n          fontSize: name_fontSize,\r\n        },\r\n        subtextStyle: {\r\n          fontSize: subname_fontSize,\r\n          fontFamily: name_fontFamily,\r\n        },\r\n      },\r\n      tooltip: {\r\n        trigger: \"item\",\r\n        formatter: function (params) {\r\n          if (typeof params.value[2] == \"undefined\") {\r\n            var toolTiphtml = \"\";\r\n            for (let i = 0; i < toolTipData.length; i++) {\r\n              console.log();\r\n              if (params.name == toolTipData[i].name) {\r\n                toolTiphtml += toolTipData[i].name + \":<br>\";\r\n                for (let j = 0; j < toolTipData[i].value.length; j++) {\r\n                  console.log(toolTipData[i].value.length);\r\n                  toolTiphtml +=\r\n                    toolTipData[i].value[j].name +\r\n                    \":\" +\r\n                    toolTipData[i].value[j].value +\r\n                    \"<br>\";\r\n                }\r\n              }\r\n            }\r\n            console.log(toolTiphtml);\r\n            // console.log(convertData(data))\r\n            return toolTiphtml;\r\n          } else {\r\n            for (let i = 0; i < toolTipData.length; i++) {\r\n              if (params.name == toolTipData[i].name) {\r\n                toolTiphtml += toolTipData[i].name + \":<br>\";\r\n                for (let j = 0; j < toolTipData[i].value.length; j++) {\r\n                  toolTiphtml +=\r\n                    toolTipData[i].value[j].name +\r\n                    \":\" +\r\n                    toolTipData[i].value[j].value +\r\n                    \"<br>\";\r\n                }\r\n              }\r\n            }\r\n            console.log(toolTiphtml);\r\n            // console.log(convertData(data))\r\n            return toolTiphtml;\r\n          }\r\n        },\r\n      },\r\n      // legend: {\r\n      //     orient: 'vertical',\r\n      //     y: 'bottom',\r\n      //     x: 'right',\r\n      //     data: ['credit_pm2.5'],\r\n      //     textStyle: {\r\n      //         color: '#fff'\r\n      //     }\r\n      // },\r\n      visualMap: {\r\n        show: true,\r\n        min: 0,\r\n        max: 200,\r\n        left: \"left\",\r\n        top: \"bottom\",\r\n        text: [\"高\", \"低\"], // 文本，默认为数值文本\r\n        calculable: true,\r\n        seriesIndex: [1],\r\n        inRange: {\r\n          // color: ['#3B5077', '#031525'] // 蓝黑\r\n          // color: ['#ffc0cb', '#800080'] // 红紫\r\n          // color: ['#3C3B3F', '#605C3C'] // 黑绿\r\n          // color: ['#0f0c29', '#302b63', '#24243e'] // 黑紫黑\r\n          // color: ['#23074d', '#cc5333'] // 紫红\r\n          color: [\"#00467F\", \"#A5CC82\"], // 蓝绿\r\n          // color: ['#1488CC', '#2B32B2'] // 浅蓝\r\n          // color: ['#00467F', '#A5CC82'] // 蓝绿\r\n          // color: ['#00467F', '#A5CC82'] // 蓝绿\r\n          // color: ['#00467F', '#A5CC82'] // 蓝绿\r\n          // color: ['#00467F', '#A5CC82'] // 蓝绿\r\n        },\r\n      },\r\n      /*工具按钮组*/\r\n      toolbox: {\r\n        show: true,\r\n        orient: \"vertical\",\r\n        left: \"right\",\r\n        top: \"center\",\r\n        feature: {\r\n          dataView: {\r\n            readOnly: false,\r\n          },\r\n          restore: {},\r\n          saveAsImage: {},\r\n        },\r\n      },\r\n      geo: {\r\n        show: true,\r\n        map: mapName,\r\n        label: {\r\n          normal: {\r\n            show: false,\r\n          },\r\n          emphasis: {\r\n            show: false,\r\n          },\r\n        },\r\n        roam: true,\r\n        itemStyle: {\r\n          normal: {\r\n            areaColor: \"#031525\",\r\n            borderColor: \"#3B5077\",\r\n          },\r\n          emphasis: {\r\n            areaColor: \"#2B91B7\",\r\n          },\r\n        },\r\n      },\r\n      series: [\r\n        {\r\n          name: \"散点\",\r\n          type: \"scatter\",\r\n          coordinateSystem: \"geo\",\r\n          data: convertData(data1),\r\n          symbolSize: function (val) {\r\n            return val[2] / 10;\r\n          },\r\n          label: {\r\n            normal: {\r\n              formatter: \"{b}\",\r\n              position: \"right\",\r\n              show: true,\r\n            },\r\n            emphasis: {\r\n              show: true,\r\n            },\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: \"#05C3F9\",\r\n            },\r\n          },\r\n        },\r\n        {\r\n          type: \"map\",\r\n          map: mapName,\r\n          geoIndex: 0,\r\n          aspectScale: 0.75, //长宽比\r\n          showLegendSymbol: false, // 存在legend时显示\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n            },\r\n            emphasis: {\r\n              show: false,\r\n              textStyle: {\r\n                color: \"#fff\",\r\n              },\r\n            },\r\n          },\r\n          roam: true,\r\n          itemStyle: {\r\n            normal: {\r\n              areaColor: \"#031525\",\r\n              borderColor: \"#3B5077\",\r\n            },\r\n            emphasis: {\r\n              areaColor: \"#2B91B7\",\r\n            },\r\n          },\r\n          animation: false,\r\n          data: data1,\r\n        },\r\n        {\r\n          name: \"点\",\r\n          type: \"scatter\",\r\n          coordinateSystem: \"geo\",\r\n          symbol: \"pin\", //气泡\r\n          symbolSize: function (val) {\r\n            var a = (maxSize4Pin - minSize4Pin) / (max - min);\r\n            var b = minSize4Pin - a * min;\r\n            b = maxSize4Pin - a * max;\r\n            return a * val[2] + b;\r\n          },\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              textStyle: {\r\n                color: \"#fff\",\r\n                fontSize: 9,\r\n              },\r\n            },\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: \"#F62157\", //标志颜色\r\n            },\r\n          },\r\n          zlevel: 6,\r\n          data: convertData(data1),\r\n        },\r\n        {\r\n          name: \"Top 5\",\r\n          type: \"effectScatter\",\r\n          coordinateSystem: \"geo\",\r\n          data: convertData(\r\n            data1\r\n              .sort(function (a, b) {\r\n                return b.value - a.value;\r\n              })\r\n              .slice(0, 5)\r\n          ),\r\n          symbolSize: function (val) {\r\n            return val[2] / 10;\r\n          },\r\n          showEffectOn: \"render\",\r\n          rippleEffect: {\r\n            brushType: \"stroke\",\r\n          },\r\n          hoverAnimation: true,\r\n          label: {\r\n            normal: {\r\n              formatter: \"{b}\",\r\n              position: \"right\",\r\n              show: true,\r\n            },\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: \"yellow\",\r\n              shadowBlur: 10,\r\n              shadowColor: \"yellow\",\r\n            },\r\n          },\r\n          zlevel: 1,\r\n        },\r\n      ],\r\n    };\r\n    myChart.setOption(option);\r\n\r\n    //世界地图\r\n    let myChart1 = this.$echarts.init(document.getElementById(\"main1\"));\r\n    this.$echarts.registerMap(\"world\", worldJson);\r\n\r\n    var data = [\r\n      {\r\n        time: 0,\r\n        data: [\r\n          {\r\n            name: \"China\",\r\n            value: [548, 98.73873873873873, \"China\"],\r\n          },\r\n          {\r\n            name: \"Japan\",\r\n            value: [2, 0.36036036036036034, \"Japan\"],\r\n          },\r\n          {\r\n            name: \"Thailand\",\r\n            value: [2, 0.36036036036036034, \"Thailand\"],\r\n          },\r\n          {\r\n            name: \"Korea, South\",\r\n            value: [1, 0.18018018018018017, \"Korea, South\"],\r\n          },\r\n          {\r\n            name: \"Taiwan*\",\r\n            value: [1, 0.18018018018018017, \"Taiwan*\"],\r\n          },\r\n          {\r\n            name: \"United States\",\r\n            value: [1, 0.18018018018018017, \"United States\"],\r\n          },\r\n          {\r\n            name: \"Afghanistan\",\r\n            value: [0, 0.0, \"Afghanistan\"],\r\n          },\r\n          {\r\n            name: \"North Macedonia\",\r\n            value: [0, 0.0, \"North Macedonia\"],\r\n          },\r\n          {\r\n            name: \"Namibia\",\r\n            value: [0, 0.0, \"Namibia\"],\r\n          },\r\n          {\r\n            name: \"Nepal\",\r\n            value: [0, 0.0, \"Nepal\"],\r\n          },\r\n          {\r\n            name: \"Netherlands\",\r\n            value: [0, 0.0, \"Netherlands\"],\r\n          },\r\n          {\r\n            name: \"New Zealand\",\r\n            value: [0, 0.0, \"New Zealand\"],\r\n          },\r\n          {\r\n            name: \"Nicaragua\",\r\n            value: [0, 0.0, \"Nicaragua\"],\r\n          },\r\n          {\r\n            name: \"Niger\",\r\n            value: [0, 0.0, \"Niger\"],\r\n          },\r\n          {\r\n            name: \"Nigeria\",\r\n            value: [0, 0.0, \"Nigeria\"],\r\n          },\r\n          {\r\n            name: \"Norway\",\r\n            value: [0, 0.0, \"Norway\"],\r\n          },\r\n          {\r\n            name: \"Morocco\",\r\n            value: [0, 0.0, \"Morocco\"],\r\n          },\r\n          {\r\n            name: \"Oman\",\r\n            value: [0, 0.0, \"Oman\"],\r\n          },\r\n          {\r\n            name: \"Pakistan\",\r\n            value: [0, 0.0, \"Pakistan\"],\r\n          },\r\n          {\r\n            name: \"Panama\",\r\n            value: [0, 0.0, \"Panama\"],\r\n          },\r\n          {\r\n            name: \"Papua New Guinea\",\r\n            value: [0, 0.0, \"Papua New Guinea\"],\r\n          },\r\n          {\r\n            name: \"Paraguay\",\r\n            value: [0, 0.0, \"Paraguay\"],\r\n          },\r\n          {\r\n            name: \"Peru\",\r\n            value: [0, 0.0, \"Peru\"],\r\n          },\r\n          {\r\n            name: \"Philippines\",\r\n            value: [0, 0.0, \"Philippines\"],\r\n          },\r\n          {\r\n            name: \"Poland\",\r\n            value: [0, 0.0, \"Poland\"],\r\n          },\r\n          {\r\n            name: \"Portugal\",\r\n            value: [0, 0.0, \"Portugal\"],\r\n          },\r\n          {\r\n            name: \"Mozambique\",\r\n            value: [0, 0.0, \"Mozambique\"],\r\n          },\r\n          {\r\n            name: \"Monaco\",\r\n            value: [0, 0.0, \"Monaco\"],\r\n          },\r\n          {\r\n            name: \"Montenegro\",\r\n            value: [0, 0.0, \"Montenegro\"],\r\n          },\r\n          {\r\n            name: \"Malawi\",\r\n            value: [0, 0.0, \"Malawi\"],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        time: 1,\r\n        data: [\r\n          {\r\n            name: \"China\",\r\n            value: [6087, 98.71878040869284, \"China\"],\r\n          },\r\n          {\r\n            name: \"Thailand\",\r\n            value: [14, 0.2270515731430425, \"Thailand\"],\r\n          },\r\n          {\r\n            name: \"Taiwan*\",\r\n            value: [8, 0.12974375608173858, \"Taiwan*\"],\r\n          },\r\n          {\r\n            name: \"Malaysia\",\r\n            value: [7, 0.11352578657152125, \"Malaysia\"],\r\n          },\r\n          {\r\n            name: \"Japan\",\r\n            value: [7, 0.11352578657152125, \"Japan\"],\r\n          },\r\n          {\r\n            name: \"Singapore\",\r\n            value: [7, 0.11352578657152125, \"Singapore\"],\r\n          },\r\n          {\r\n            name: \"Australia\",\r\n            value: [6, 0.09730781706130393, \"Australia\"],\r\n          },\r\n          {\r\n            name: \"United States\",\r\n            value: [5, 0.0810898475510866, \"United States\"],\r\n          },\r\n          {\r\n            name: \"France\",\r\n            value: [5, 0.0810898475510866, \"France\"],\r\n          },\r\n          {\r\n            name: \"Korea, South\",\r\n            value: [4, 0.06487187804086929, \"Korea, South\"],\r\n          },\r\n          {\r\n            name: \"Germany\",\r\n            value: [4, 0.06487187804086929, \"Germany\"],\r\n          },\r\n          {\r\n            name: \"United Arab Emirates\",\r\n            value: [4, 0.06487187804086929, \"United Arab Emirates\"],\r\n          },\r\n          {\r\n            name: \"Vietnam\",\r\n            value: [2, 0.032435939020434644, \"Vietnam\"],\r\n          },\r\n          {\r\n            name: \"Canada\",\r\n            value: [2, 0.032435939020434644, \"Canada\"],\r\n          },\r\n          {\r\n            name: \"Finland\",\r\n            value: [1, 0.016217969510217322, \"Finland\"],\r\n          },\r\n          {\r\n            name: \"Nepal\",\r\n            value: [1, 0.016217969510217322, \"Nepal\"],\r\n          },\r\n          {\r\n            name: \"Cambodia\",\r\n            value: [1, 0.016217969510217322, \"Cambodia\"],\r\n          },\r\n          {\r\n            name: \"Sri Lanka\",\r\n            value: [1, 0.016217969510217322, \"Sri Lanka\"],\r\n          },\r\n          {\r\n            name: \"New Zealand\",\r\n            value: [0, 0.0, \"New Zealand\"],\r\n          },\r\n          {\r\n            name: \"Nicaragua\",\r\n            value: [0, 0.0, \"Nicaragua\"],\r\n          },\r\n          {\r\n            name: \"Nigeria\",\r\n            value: [0, 0.0, \"Nigeria\"],\r\n          },\r\n          {\r\n            name: \"Niger\",\r\n            value: [0, 0.0, \"Niger\"],\r\n          },\r\n          {\r\n            name: \"Netherlands\",\r\n            value: [0, 0.0, \"Netherlands\"],\r\n          },\r\n          {\r\n            name: \"Afghanistan\",\r\n            value: [0, 0.0, \"Afghanistan\"],\r\n          },\r\n          {\r\n            name: \"North Macedonia\",\r\n            value: [0, 0.0, \"North Macedonia\"],\r\n          },\r\n          {\r\n            name: \"Norway\",\r\n            value: [0, 0.0, \"Norway\"],\r\n          },\r\n          {\r\n            name: \"Oman\",\r\n            value: [0, 0.0, \"Oman\"],\r\n          },\r\n          {\r\n            name: \"Panama\",\r\n            value: [0, 0.0, \"Panama\"],\r\n          },\r\n          {\r\n            name: \"Papua New Guinea\",\r\n            value: [0, 0.0, \"Papua New Guinea\"],\r\n          },\r\n          {\r\n            name: \"Paraguay\",\r\n            value: [0, 0.0, \"Paraguay\"],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        time: 2,\r\n        data: [\r\n          {\r\n            name: \"China\",\r\n            value: [27440, 99.29437307761896, \"China\"],\r\n          },\r\n          {\r\n            name: \"Singapore\",\r\n            value: [28, 0.10132078885471323, \"Singapore\"],\r\n          },\r\n          {\r\n            name: \"Thailand\",\r\n            value: [25, 0.0904649900488511, \"Thailand\"],\r\n          },\r\n          {\r\n            name: \"Japan\",\r\n            value: [22, 0.07960919124298896, \"Japan\"],\r\n          },\r\n          {\r\n            name: \"Korea, South\",\r\n            value: [19, 0.06875339243712683, \"Korea, South\"],\r\n          },\r\n          {\r\n            name: \"Australia\",\r\n            value: [13, 0.04704179482540257, \"Australia\"],\r\n          },\r\n          {\r\n            name: \"Malaysia\",\r\n            value: [12, 0.04342319522344853, \"Malaysia\"],\r\n          },\r\n          {\r\n            name: \"Germany\",\r\n            value: [12, 0.04342319522344853, \"Germany\"],\r\n          },\r\n          {\r\n            name: \"Taiwan*\",\r\n            value: [11, 0.03980459562149448, \"Taiwan*\"],\r\n          },\r\n          {\r\n            name: \"United States\",\r\n            value: [11, 0.03980459562149448, \"United States\"],\r\n          },\r\n          {\r\n            name: \"Vietnam\",\r\n            value: [8, 0.02894879681563235, \"Vietnam\"],\r\n          },\r\n          {\r\n            name: \"France\",\r\n            value: [6, 0.021711597611724264, \"France\"],\r\n          },\r\n          {\r\n            name: \"Canada\",\r\n            value: [5, 0.01809299800977022, \"Canada\"],\r\n          },\r\n          {\r\n            name: \"United Arab Emirates\",\r\n            value: [5, 0.01809299800977022, \"United Arab Emirates\"],\r\n          },\r\n          {\r\n            name: \"India\",\r\n            value: [3, 0.010855798805862132, \"India\"],\r\n          },\r\n          {\r\n            name: \"Philippines\",\r\n            value: [2, 0.007237199203908087, \"Philippines\"],\r\n          },\r\n          {\r\n            name: \"United Kingdom\",\r\n            value: [2, 0.007237199203908087, \"United Kingdom\"],\r\n          },\r\n          {\r\n            name: \"Italy\",\r\n            value: [2, 0.007237199203908087, \"Italy\"],\r\n          },\r\n          {\r\n            name: \"Russia\",\r\n            value: [2, 0.007237199203908087, \"Russia\"],\r\n          },\r\n          {\r\n            name: \"Cambodia\",\r\n            value: [1, 0.0036185996019540436, \"Cambodia\"],\r\n          },\r\n          {\r\n            name: \"Sweden\",\r\n            value: [1, 0.0036185996019540436, \"Sweden\"],\r\n          },\r\n          {\r\n            name: \"Nepal\",\r\n            value: [1, 0.0036185996019540436, \"Nepal\"],\r\n          },\r\n          {\r\n            name: \"Belgium\",\r\n            value: [1, 0.0036185996019540436, \"Belgium\"],\r\n          },\r\n          {\r\n            name: \"Sri Lanka\",\r\n            value: [1, 0.0036185996019540436, \"Sri Lanka\"],\r\n          },\r\n          {\r\n            name: \"Finland\",\r\n            value: [1, 0.0036185996019540436, \"Finland\"],\r\n          },\r\n          {\r\n            name: \"Spain\",\r\n            value: [1, 0.0036185996019540436, \"Spain\"],\r\n          },\r\n          {\r\n            name: \"New Zealand\",\r\n            value: [0, 0.0, \"New Zealand\"],\r\n          },\r\n          {\r\n            name: \"Oman\",\r\n            value: [0, 0.0, \"Oman\"],\r\n          },\r\n          {\r\n            name: \"Nicaragua\",\r\n            value: [0, 0.0, \"Nicaragua\"],\r\n          },\r\n          {\r\n            name: \"Niger\",\r\n            value: [0, 0.0, \"Niger\"],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        time: 3,\r\n        data: [\r\n          {\r\n            name: \"China\",\r\n            value: [44759, 98.97835076623693, \"China\"],\r\n          },\r\n          {\r\n            name: \"Diamond Princess\",\r\n            value: [175, 0.38698834612237676, \"Diamond Princess\"],\r\n          },\r\n          {\r\n            name: \"Singapore\",\r\n            value: [50, 0.11056809889210766, \"Singapore\"],\r\n          },\r\n          {\r\n            name: \"Thailand\",\r\n            value: [33, 0.07297494526879104, \"Thailand\"],\r\n          },\r\n          {\r\n            name: \"Japan\",\r\n            value: [28, 0.06191813537958028, \"Japan\"],\r\n          },\r\n          {\r\n            name: \"Korea, South\",\r\n            value: [28, 0.06191813537958028, \"Korea, South\"],\r\n          },\r\n          {\r\n            name: \"Malaysia\",\r\n            value: [18, 0.03980451560115875, \"Malaysia\"],\r\n          },\r\n          {\r\n            name: \"Taiwan*\",\r\n            value: [18, 0.03980451560115875, \"Taiwan*\"],\r\n          },\r\n          {\r\n            name: \"Germany\",\r\n            value: [16, 0.03538179164547445, \"Germany\"],\r\n          },\r\n          {\r\n            name: \"Vietnam\",\r\n            value: [15, 0.0331704296676323, \"Vietnam\"],\r\n          },\r\n          {\r\n            name: \"Australia\",\r\n            value: [15, 0.0331704296676323, \"Australia\"],\r\n          },\r\n          {\r\n            name: \"United States\",\r\n            value: [12, 0.026536343734105836, \"United States\"],\r\n          },\r\n          {\r\n            name: \"France\",\r\n            value: [11, 0.024324981756263683, \"France\"],\r\n          },\r\n          {\r\n            name: \"United Kingdom\",\r\n            value: [9, 0.019902257800579377, \"United Kingdom\"],\r\n          },\r\n          {\r\n            name: \"United Arab Emirates\",\r\n            value: [8, 0.017690895822737224, \"United Arab Emirates\"],\r\n          },\r\n          {\r\n            name: \"Canada\",\r\n            value: [7, 0.01547953384489507, \"Canada\"],\r\n          },\r\n          {\r\n            name: \"India\",\r\n            value: [3, 0.006634085933526459, \"India\"],\r\n          },\r\n          {\r\n            name: \"Philippines\",\r\n            value: [3, 0.006634085933526459, \"Philippines\"],\r\n          },\r\n          {\r\n            name: \"Italy\",\r\n            value: [3, 0.006634085933526459, \"Italy\"],\r\n          },\r\n          {\r\n            name: \"Spain\",\r\n            value: [2, 0.004422723955684306, \"Spain\"],\r\n          },\r\n          {\r\n            name: \"Russia\",\r\n            value: [2, 0.004422723955684306, \"Russia\"],\r\n          },\r\n          {\r\n            name: \"Sri Lanka\",\r\n            value: [1, 0.002211361977842153, \"Sri Lanka\"],\r\n          },\r\n          {\r\n            name: \"Cambodia\",\r\n            value: [1, 0.002211361977842153, \"Cambodia\"],\r\n          },\r\n          {\r\n            name: \"Sweden\",\r\n            value: [1, 0.002211361977842153, \"Sweden\"],\r\n          },\r\n          {\r\n            name: \"Nepal\",\r\n            value: [1, 0.002211361977842153, \"Nepal\"],\r\n          },\r\n          {\r\n            name: \"Belgium\",\r\n            value: [1, 0.002211361977842153, \"Belgium\"],\r\n          },\r\n          {\r\n            name: \"Finland\",\r\n            value: [1, 0.002211361977842153, \"Finland\"],\r\n          },\r\n          {\r\n            name: \"North Macedonia\",\r\n            value: [0, 0.0, \"North Macedonia\"],\r\n          },\r\n          {\r\n            name: \"Nigeria\",\r\n            value: [0, 0.0, \"Nigeria\"],\r\n          },\r\n          {\r\n            name: \"Niger\",\r\n            value: [0, 0.0, \"Niger\"],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        time: 4,\r\n        data: [\r\n          {\r\n            name: \"China\",\r\n            value: [74619, 98.65148931106968, \"China\"],\r\n          },\r\n          {\r\n            name: \"Diamond Princess\",\r\n            value: [621, 0.8210050370840439, \"Diamond Princess\"],\r\n          },\r\n          {\r\n            name: \"Japan\",\r\n            value: [84, 0.11105382144131995, \"Japan\"],\r\n          },\r\n          {\r\n            name: \"Singapore\",\r\n            value: [84, 0.11105382144131995, \"Singapore\"],\r\n          },\r\n          {\r\n            name: \"Thailand\",\r\n            value: [35, 0.046272425600549984, \"Thailand\"],\r\n          },\r\n          {\r\n            name: \"Korea, South\",\r\n            value: [31, 0.040984148389058554, \"Korea, South\"],\r\n          },\r\n          {\r\n            name: \"Taiwan*\",\r\n            value: [23, 0.030407593966075702, \"Taiwan*\"],\r\n          },\r\n          {\r\n            name: \"Malaysia\",\r\n            value: [22, 0.029085524663202845, \"Malaysia\"],\r\n          },\r\n          {\r\n            name: \"Vietnam\",\r\n            value: [16, 0.021153108845965704, \"Vietnam\"],\r\n          },\r\n          {\r\n            name: \"Germany\",\r\n            value: [16, 0.021153108845965704, \"Germany\"],\r\n          },\r\n          {\r\n            name: \"Australia\",\r\n            value: [15, 0.01983103954309285, \"Australia\"],\r\n          },\r\n          {\r\n            name: \"United States\",\r\n            value: [13, 0.017186900937347135, \"United States\"],\r\n          },\r\n          {\r\n            name: \"France\",\r\n            value: [12, 0.015864831634474278, \"France\"],\r\n          },\r\n          {\r\n            name: \"United Kingdom\",\r\n            value: [9, 0.01189862372585571, \"United Kingdom\"],\r\n          },\r\n          {\r\n            name: \"United Arab Emirates\",\r\n            value: [9, 0.01189862372585571, \"United Arab Emirates\"],\r\n          },\r\n          {\r\n            name: \"Canada\",\r\n            value: [8, 0.010576554422982852, \"Canada\"],\r\n          },\r\n          {\r\n            name: \"Italy\",\r\n            value: [3, 0.0039662079086185695, \"Italy\"],\r\n          },\r\n          {\r\n            name: \"India\",\r\n            value: [3, 0.0039662079086185695, \"India\"],\r\n          },\r\n          {\r\n            name: \"Philippines\",\r\n            value: [3, 0.0039662079086185695, \"Philippines\"],\r\n          },\r\n          {\r\n            name: \"Iran\",\r\n            value: [2, 0.002644138605745713, \"Iran\"],\r\n          },\r\n          {\r\n            name: \"Spain\",\r\n            value: [2, 0.002644138605745713, \"Spain\"],\r\n          },\r\n          {\r\n            name: \"Russia\",\r\n            value: [2, 0.002644138605745713, \"Russia\"],\r\n          },\r\n          {\r\n            name: \"Sri Lanka\",\r\n            value: [1, 0.0013220693028728565, \"Sri Lanka\"],\r\n          },\r\n          {\r\n            name: \"Sweden\",\r\n            value: [1, 0.0013220693028728565, \"Sweden\"],\r\n          },\r\n          {\r\n            name: \"Egypt\",\r\n            value: [1, 0.0013220693028728565, \"Egypt\"],\r\n          },\r\n          {\r\n            name: \"Cambodia\",\r\n            value: [1, 0.0013220693028728565, \"Cambodia\"],\r\n          },\r\n          {\r\n            name: \"Nepal\",\r\n            value: [1, 0.0013220693028728565, \"Nepal\"],\r\n          },\r\n          {\r\n            name: \"Finland\",\r\n            value: [1, 0.0013220693028728565, \"Finland\"],\r\n          },\r\n          {\r\n            name: \"Belgium\",\r\n            value: [1, 0.0013220693028728565, \"Belgium\"],\r\n          },\r\n          {\r\n            name: \"Morocco\",\r\n            value: [0, 0.0, \"Morocco\"],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        time: 5,\r\n        data: [\r\n          {\r\n            name: \"China\",\r\n            value: [78166, 96.04118543274193, \"China\"],\r\n          },\r\n          {\r\n            name: \"Korea, South\",\r\n            value: [1261, 1.5493684572664275, \"Korea, South\"],\r\n          },\r\n          {\r\n            name: \"Diamond Princess\",\r\n            value: [705, 0.8662210645303976, \"Diamond Princess\"],\r\n          },\r\n          {\r\n            name: \"Italy\",\r\n            value: [453, 0.5565931095493193, \"Italy\"],\r\n          },\r\n          {\r\n            name: \"Japan\",\r\n            value: [189, 0.2322209662358087, \"Japan\"],\r\n          },\r\n          {\r\n            name: \"Iran\",\r\n            value: [139, 0.17078684818400747, \"Iran\"],\r\n          },\r\n          {\r\n            name: \"Singapore\",\r\n            value: [93, 0.11426745957635032, \"Singapore\"],\r\n          },\r\n          {\r\n            name: \"United States\",\r\n            value: [57, 0.07003489457905342, \"United States\"],\r\n          },\r\n          {\r\n            name: \"Thailand\",\r\n            value: [40, 0.049147294441440996, \"Thailand\"],\r\n          },\r\n          {\r\n            name: \"Bahrain\",\r\n            value: [33, 0.040546517914188826, \"Bahrain\"],\r\n          },\r\n          {\r\n            name: \"Taiwan*\",\r\n            value: [32, 0.0393178355531528, \"Taiwan*\"],\r\n          },\r\n          {\r\n            name: \"Germany\",\r\n            value: [27, 0.03317442374797267, \"Germany\"],\r\n          },\r\n          {\r\n            name: \"Kuwait\",\r\n            value: [26, 0.03194574138693665, \"Kuwait\"],\r\n          },\r\n          {\r\n            name: \"Malaysia\",\r\n            value: [22, 0.02703101194279255, \"Malaysia\"],\r\n          },\r\n          {\r\n            name: \"France\",\r\n            value: [18, 0.02211628249864845, \"France\"],\r\n          },\r\n          {\r\n            name: \"Vietnam\",\r\n            value: [16, 0.0196589177765764, \"Vietnam\"],\r\n          },\r\n          {\r\n            name: \"Australia\",\r\n            value: [15, 0.018430235415540376, \"Australia\"],\r\n          },\r\n          {\r\n            name: \"United Arab Emirates\",\r\n            value: [13, 0.015972870693468325, \"United Arab Emirates\"],\r\n          },\r\n          {\r\n            name: \"United Kingdom\",\r\n            value: [13, 0.015972870693468325, \"United Kingdom\"],\r\n          },\r\n          {\r\n            name: \"Spain\",\r\n            value: [13, 0.015972870693468325, \"Spain\"],\r\n          },\r\n          {\r\n            name: \"Canada\",\r\n            value: [11, 0.013515505971396275, \"Canada\"],\r\n          },\r\n          {\r\n            name: \"Iraq\",\r\n            value: [5, 0.0061434118051801245, \"Iraq\"],\r\n          },\r\n          {\r\n            name: \"Oman\",\r\n            value: [4, 0.0049147294441441, \"Oman\"],\r\n          },\r\n          {\r\n            name: \"Philippines\",\r\n            value: [3, 0.0036860470831080747, \"Philippines\"],\r\n          },\r\n          {\r\n            name: \"India\",\r\n            value: [3, 0.0036860470831080747, \"India\"],\r\n          },\r\n          {\r\n            name: \"Croatia\",\r\n            value: [3, 0.0036860470831080747, \"Croatia\"],\r\n          },\r\n          {\r\n            name: \"Russia\",\r\n            value: [2, 0.00245736472207205, \"Russia\"],\r\n          },\r\n          {\r\n            name: \"Israel\",\r\n            value: [2, 0.00245736472207205, \"Israel\"],\r\n          },\r\n          {\r\n            name: \"Lebanon\",\r\n            value: [2, 0.00245736472207205, \"Lebanon\"],\r\n          },\r\n          {\r\n            name: \"Sweden\",\r\n            value: [2, 0.00245736472207205, \"Sweden\"],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        time: 6,\r\n        data: [\r\n          {\r\n            name: \"China\",\r\n            value: [80386, 84.51009251471825, \"China\"],\r\n          },\r\n          {\r\n            name: \"Korea, South\",\r\n            value: [5621, 5.909377628259041, \"Korea, South\"],\r\n          },\r\n          {\r\n            name: \"Italy\",\r\n            value: [3089, 3.2474768713204374, \"Italy\"],\r\n          },\r\n          {\r\n            name: \"Iran\",\r\n            value: [2922, 3.0719091673675356, \"Iran\"],\r\n          },\r\n          {\r\n            name: \"Diamond Princess\",\r\n            value: [706, 0.7422203532380152, \"Diamond Princess\"],\r\n          },\r\n          {\r\n            name: \"Japan\",\r\n            value: [331, 0.3479814970563499, \"Japan\"],\r\n          },\r\n          {\r\n            name: \"France\",\r\n            value: [288, 0.3027754415475189, \"France\"],\r\n          },\r\n          {\r\n            name: \"Germany\",\r\n            value: [262, 0.27544154751892347, \"Germany\"],\r\n          },\r\n          {\r\n            name: \"Spain\",\r\n            value: [222, 0.23338940285954585, \"Spain\"],\r\n          },\r\n          {\r\n            name: \"United States\",\r\n            value: [149, 0.15664423885618167, \"United States\"],\r\n          },\r\n          {\r\n            name: \"Singapore\",\r\n            value: [110, 0.11564339781328847, \"Singapore\"],\r\n          },\r\n          {\r\n            name: \"Switzerland\",\r\n            value: [90, 0.09461732548359966, \"Switzerland\"],\r\n          },\r\n          {\r\n            name: \"United Kingdom\",\r\n            value: [86, 0.0904121110176619, \"United Kingdom\"],\r\n          },\r\n          {\r\n            name: \"Kuwait\",\r\n            value: [56, 0.05887300252312868, \"Kuwait\"],\r\n          },\r\n          {\r\n            name: \"Norway\",\r\n            value: [56, 0.05887300252312868, \"Norway\"],\r\n          },\r\n          {\r\n            name: \"Bahrain\",\r\n            value: [52, 0.054667788057190914, \"Bahrain\"],\r\n          },\r\n          {\r\n            name: \"Australia\",\r\n            value: [52, 0.054667788057190914, \"Australia\"],\r\n          },\r\n          {\r\n            name: \"Malaysia\",\r\n            value: [50, 0.052565180824222034, \"Malaysia\"],\r\n          },\r\n          {\r\n            name: \"Thailand\",\r\n            value: [43, 0.04520605550883095, \"Thailand\"],\r\n          },\r\n          {\r\n            name: \"Taiwan*\",\r\n            value: [42, 0.04415475189234651, \"Taiwan*\"],\r\n          },\r\n          {\r\n            name: \"Netherlands\",\r\n            value: [38, 0.03994953742640875, \"Netherlands\"],\r\n          },\r\n          {\r\n            name: \"Sweden\",\r\n            value: [35, 0.036795626576955426, \"Sweden\"],\r\n          },\r\n          {\r\n            name: \"Iraq\",\r\n            value: [35, 0.036795626576955426, \"Iraq\"],\r\n          },\r\n          {\r\n            name: \"Canada\",\r\n            value: [33, 0.034693019343986546, \"Canada\"],\r\n          },\r\n          {\r\n            name: \"Austria\",\r\n            value: [29, 0.03048780487804878, \"Austria\"],\r\n          },\r\n          {\r\n            name: \"India\",\r\n            value: [28, 0.02943650126156434, \"India\"],\r\n          },\r\n          {\r\n            name: \"United Arab Emirates\",\r\n            value: [27, 0.0283851976450799, \"United Arab Emirates\"],\r\n          },\r\n          {\r\n            name: \"Iceland\",\r\n            value: [26, 0.027333894028595457, \"Iceland\"],\r\n          },\r\n          {\r\n            name: \"Belgium\",\r\n            value: [23, 0.024179983179142137, \"Belgium\"],\r\n          },\r\n          {\r\n            name: \"Vietnam\",\r\n            value: [16, 0.01682085786375105, \"Vietnam\"],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        time: 7,\r\n        data: [\r\n          {\r\n            name: \"China\",\r\n            value: [80921, 64.28679245283018, \"China\"],\r\n          },\r\n          {\r\n            name: \"Italy\",\r\n            value: [12462, 9.900297914597814, \"Italy\"],\r\n          },\r\n          {\r\n            name: \"Iran\",\r\n            value: [9000, 7.149950347567031, \"Iran\"],\r\n          },\r\n          {\r\n            name: \"Korea, South\",\r\n            value: [7755, 6.160873882820258, \"Korea, South\"],\r\n          },\r\n          {\r\n            name: \"France\",\r\n            value: [2293, 1.821648460774578, \"France\"],\r\n          },\r\n          {\r\n            name: \"Spain\",\r\n            value: [2277, 1.8089374379344587, \"Spain\"],\r\n          },\r\n          {\r\n            name: \"Germany\",\r\n            value: [1908, 1.5157894736842106, \"Germany\"],\r\n          },\r\n          {\r\n            name: \"United States\",\r\n            value: [1281, 1.0176762661370407, \"United States\"],\r\n          },\r\n          {\r\n            name: \"Diamond Princess\",\r\n            value: [706, 0.5608738828202582, \"Diamond Princess\"],\r\n          },\r\n          {\r\n            name: \"Switzerland\",\r\n            value: [652, 0.517974180734856, \"Switzerland\"],\r\n          },\r\n          {\r\n            name: \"Japan\",\r\n            value: [639, 0.5076464746772592, \"Japan\"],\r\n          },\r\n          {\r\n            name: \"Norway\",\r\n            value: [598, 0.47507447864945385, \"Norway\"],\r\n          },\r\n          {\r\n            name: \"Netherlands\",\r\n            value: [503, 0.39960278053624626, \"Netherlands\"],\r\n          },\r\n          {\r\n            name: \"Sweden\",\r\n            value: [500, 0.3972194637537239, \"Sweden\"],\r\n          },\r\n          {\r\n            name: \"United Kingdom\",\r\n            value: [459, 0.36464746772591855, \"United Kingdom\"],\r\n          },\r\n          {\r\n            name: \"Denmark\",\r\n            value: [444, 0.35273088381330686, \"Denmark\"],\r\n          },\r\n          {\r\n            name: \"Belgium\",\r\n            value: [314, 0.24945382323733864, \"Belgium\"],\r\n          },\r\n          {\r\n            name: \"Qatar\",\r\n            value: [262, 0.20814299900695135, \"Qatar\"],\r\n          },\r\n          {\r\n            name: \"Austria\",\r\n            value: [246, 0.19543197616683217, \"Austria\"],\r\n          },\r\n          {\r\n            name: \"Bahrain\",\r\n            value: [195, 0.15491559086395235, \"Bahrain\"],\r\n          },\r\n          {\r\n            name: \"Singapore\",\r\n            value: [178, 0.14141012909632572, \"Singapore\"],\r\n          },\r\n          {\r\n            name: \"Malaysia\",\r\n            value: [149, 0.11837140019860973, \"Malaysia\"],\r\n          },\r\n          {\r\n            name: \"Australia\",\r\n            value: [128, 0.10168818272095333, \"Australia\"],\r\n          },\r\n          {\r\n            name: \"Canada\",\r\n            value: [108, 0.08579940417080437, \"Canada\"],\r\n          },\r\n          {\r\n            name: \"Greece\",\r\n            value: [99, 0.07864945382323733, \"Greece\"],\r\n          },\r\n          {\r\n            name: \"Czechia\",\r\n            value: [91, 0.07229394240317775, \"Czechia\"],\r\n          },\r\n          {\r\n            name: \"Iceland\",\r\n            value: [85, 0.06752730883813307, \"Iceland\"],\r\n          },\r\n          {\r\n            name: \"Israel\",\r\n            value: [79, 0.06276067527308839, \"Israel\"],\r\n          },\r\n          {\r\n            name: \"United Arab Emirates\",\r\n            value: [74, 0.058788480635551144, \"United Arab Emirates\"],\r\n          },\r\n          {\r\n            name: \"Kuwait\",\r\n            value: [72, 0.05719960278053625, \"Kuwait\"],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        time: 8,\r\n        data: [\r\n          {\r\n            name: \"China\",\r\n            value: [81102, 37.748899211528254, \"China\"],\r\n          },\r\n          {\r\n            name: \"Italy\",\r\n            value: [35713, 16.622604097818904, \"Italy\"],\r\n          },\r\n          {\r\n            name: \"Iran\",\r\n            value: [17361, 8.080671736965082, \"Iran\"],\r\n          },\r\n          {\r\n            name: \"Spain\",\r\n            value: [13910, 6.47440492259572, \"Spain\"],\r\n          },\r\n          {\r\n            name: \"Germany\",\r\n            value: [12327, 5.737598093518148, \"Germany\"],\r\n          },\r\n          {\r\n            name: \"France\",\r\n            value: [9124, 4.246762797538702, \"France\"],\r\n          },\r\n          {\r\n            name: \"Korea, South\",\r\n            value: [8413, 3.9158280815095465, \"Korea, South\"],\r\n          },\r\n          {\r\n            name: \"United States\",\r\n            value: [7783, 3.6225947888254844, \"United States\"],\r\n          },\r\n          {\r\n            name: \"Switzerland\",\r\n            value: [3028, 1.4093816035672062, \"Switzerland\"],\r\n          },\r\n          {\r\n            name: \"United Kingdom\",\r\n            value: [2642, 1.2297180305893525, \"United Kingdom\"],\r\n          },\r\n          {\r\n            name: \"Netherlands\",\r\n            value: [2058, 0.9578954227679362, \"Netherlands\"],\r\n          },\r\n          {\r\n            name: \"Austria\",\r\n            value: [1646, 0.7661301583459781, \"Austria\"],\r\n          },\r\n          {\r\n            name: \"Norway\",\r\n            value: [1550, 0.7214469899369781, \"Norway\"],\r\n          },\r\n          {\r\n            name: \"Belgium\",\r\n            value: [1486, 0.6916582109976448, \"Belgium\"],\r\n          },\r\n          {\r\n            name: \"Sweden\",\r\n            value: [1279, 0.5953101291157387, \"Sweden\"],\r\n          },\r\n          {\r\n            name: \"Denmark\",\r\n            value: [1116, 0.5194418327546242, \"Denmark\"],\r\n          },\r\n          {\r\n            name: \"Japan\",\r\n            value: [889, 0.4137847574541765, \"Japan\"],\r\n          },\r\n          {\r\n            name: \"Malaysia\",\r\n            value: [790, 0.3677052400323953, \"Malaysia\"],\r\n          },\r\n          {\r\n            name: \"Diamond Princess\",\r\n            value: [712, 0.33140016570008285, \"Diamond Princess\"],\r\n          },\r\n          {\r\n            name: \"Canada\",\r\n            value: [657, 0.30580043379909333, \"Canada\"],\r\n          },\r\n          {\r\n            name: \"Australia\",\r\n            value: [568, 0.26437541308658297, \"Australia\"],\r\n          },\r\n          {\r\n            name: \"Czechia\",\r\n            value: [464, 0.21596864731016635, \"Czechia\"],\r\n          },\r\n          {\r\n            name: \"Qatar\",\r\n            value: [452, 0.21038325125904137, \"Qatar\"],\r\n          },\r\n          {\r\n            name: \"Portugal\",\r\n            value: [448, 0.20852145257533303, \"Portugal\"],\r\n          },\r\n          {\r\n            name: \"Greece\",\r\n            value: [418, 0.19455796244752055, \"Greece\"],\r\n          },\r\n          {\r\n            name: \"Brazil\",\r\n            value: [372, 0.17314727758487475, \"Brazil\"],\r\n          },\r\n          {\r\n            name: \"Finland\",\r\n            value: [336, 0.15639108943149976, \"Finland\"],\r\n          },\r\n          {\r\n            name: \"Singapore\",\r\n            value: [313, 0.14568574700017686, \"Singapore\"],\r\n          },\r\n          {\r\n            name: \"Israel\",\r\n            value: [304, 0.14149669996183312, \"Israel\"],\r\n          },\r\n          {\r\n            name: \"Pakistan\",\r\n            value: [299, 0.1391694516071977, \"Pakistan\"],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        time: 9,\r\n        data: [\r\n          {\r\n            name: \"China\",\r\n            value: [81661, 17.459265419917344, \"China\"],\r\n          },\r\n          {\r\n            name: \"Italy\",\r\n            value: [74386, 15.903857625132824, \"Italy\"],\r\n          },\r\n          {\r\n            name: \"United States\",\r\n            value: [65778, 14.06345208595686, \"United States\"],\r\n          },\r\n          {\r\n            name: \"Spain\",\r\n            value: [49515, 10.586394083677732, \"Spain\"],\r\n          },\r\n          {\r\n            name: \"Germany\",\r\n            value: [37323, 7.979723041201737, \"Germany\"],\r\n          },\r\n          {\r\n            name: \"Iran\",\r\n            value: [27017, 5.7762821156966835, \"Iran\"],\r\n          },\r\n          {\r\n            name: \"France\",\r\n            value: [25600, 5.473325023571644, \"France\"],\r\n          },\r\n          {\r\n            name: \"Switzerland\",\r\n            value: [10897, 2.3297977649164143, \"Switzerland\"],\r\n          },\r\n          {\r\n            name: \"United Kingdom\",\r\n            value: [9640, 2.061048954188697, \"United Kingdom\"],\r\n          },\r\n          {\r\n            name: \"Korea, South\",\r\n            value: [9137, 1.9535066695458636, \"Korea, South\"],\r\n          },\r\n          {\r\n            name: \"Netherlands\",\r\n            value: [6438, 1.3764557227247751, \"Netherlands\"],\r\n          },\r\n          {\r\n            name: \"Austria\",\r\n            value: [5588, 1.1947242278014978, \"Austria\"],\r\n          },\r\n          {\r\n            name: \"Belgium\",\r\n            value: [4937, 1.055539282866141, \"Belgium\"],\r\n          },\r\n          {\r\n            name: \"Canada\",\r\n            value: [3251, 0.6950695176418521, \"Canada\"],\r\n          },\r\n          {\r\n            name: \"Norway\",\r\n            value: [3084, 0.6593646239333965, \"Norway\"],\r\n          },\r\n          {\r\n            name: \"Portugal\",\r\n            value: [2995, 0.6403362674061357, \"Portugal\"],\r\n          },\r\n          {\r\n            name: \"Brazil\",\r\n            value: [2554, 0.5460496918047648, \"Brazil\"],\r\n          },\r\n          {\r\n            name: \"Sweden\",\r\n            value: [2526, 0.5400632425602333, \"Sweden\"],\r\n          },\r\n          {\r\n            name: \"Turkey\",\r\n            value: [2433, 0.5201796789980394, \"Turkey\"],\r\n          },\r\n          {\r\n            name: \"Israel\",\r\n            value: [2369, 0.5064963664391103, \"Israel\"],\r\n          },\r\n          {\r\n            name: \"Australia\",\r\n            value: [2364, 0.505427357645444, \"Australia\"],\r\n          },\r\n          {\r\n            name: \"Denmark\",\r\n            value: [1862, 0.3980988747613438, \"Denmark\"],\r\n          },\r\n          {\r\n            name: \"Malaysia\",\r\n            value: [1796, 0.3839879586849481, \"Malaysia\"],\r\n          },\r\n          {\r\n            name: \"Czechia\",\r\n            value: [1654, 0.35362810894482416, \"Czechia\"],\r\n          },\r\n          {\r\n            name: \"Ireland\",\r\n            value: [1564, 0.33438595065883014, \"Ireland\"],\r\n          },\r\n          {\r\n            name: \"Luxembourg\",\r\n            value: [1333, 0.2849977443914454, \"Luxembourg\"],\r\n          },\r\n          {\r\n            name: \"Japan\",\r\n            value: [1307, 0.27943889866438043, \"Japan\"],\r\n          },\r\n          {\r\n            name: \"Ecuador\",\r\n            value: [1173, 0.2507894629941226, \"Ecuador\"],\r\n          },\r\n          {\r\n            name: \"Chile\",\r\n            value: [1142, 0.2441616084733913, \"Chile\"],\r\n          },\r\n          {\r\n            name: \"Pakistan\",\r\n            value: [1063, 0.2272712695334632, \"Pakistan\"],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        time: 10,\r\n        data: [\r\n          {\r\n            name: \"United States\",\r\n            value: [213242, 22.86439111423725, \"United States\"],\r\n          },\r\n          {\r\n            name: \"Italy\",\r\n            value: [110574, 11.856047040759652, \"Italy\"],\r\n          },\r\n          {\r\n            name: \"Spain\",\r\n            value: [104118, 11.163817043697554, \"Spain\"],\r\n          },\r\n          {\r\n            name: \"China\",\r\n            value: [82361, 8.830971931231625, \"China\"],\r\n          },\r\n          {\r\n            name: \"Germany\",\r\n            value: [77872, 8.349649059978255, \"Germany\"],\r\n          },\r\n          {\r\n            name: \"France\",\r\n            value: [57749, 6.192005901539504, \"France\"],\r\n          },\r\n          {\r\n            name: \"Iran\",\r\n            value: [47593, 5.103051773571311, \"Iran\"],\r\n          },\r\n          {\r\n            name: \"United Kingdom\",\r\n            value: [29865, 3.202207072840695, \"United Kingdom\"],\r\n          },\r\n          {\r\n            name: \"Switzerland\",\r\n            value: [17768, 1.905133610253925, \"Switzerland\"],\r\n          },\r\n          {\r\n            name: \"Turkey\",\r\n            value: [15679, 1.6811453103991045, \"Turkey\"],\r\n          },\r\n          {\r\n            name: \"Belgium\",\r\n            value: [13964, 1.4972583145872247, \"Belgium\"],\r\n          },\r\n          {\r\n            name: \"Netherlands\",\r\n            value: [13696, 1.4685226207810533, \"Netherlands\"],\r\n          },\r\n          {\r\n            name: \"Austria\",\r\n            value: [10711, 1.1484627476041078, \"Austria\"],\r\n          },\r\n          {\r\n            name: \"Korea, South\",\r\n            value: [9887, 1.0601112114239395, \"Korea, South\"],\r\n          },\r\n          {\r\n            name: \"Canada\",\r\n            value: [9560, 1.0250493760708872, \"Canada\"],\r\n          },\r\n          {\r\n            name: \"Portugal\",\r\n            value: [8251, 0.8846948119205952, \"Portugal\"],\r\n          },\r\n          {\r\n            name: \"Brazil\",\r\n            value: [6836, 0.7329746375335339, \"Brazil\"],\r\n          },\r\n          {\r\n            name: \"Israel\",\r\n            value: [6092, 0.6532009203999837, \"Israel\"],\r\n          },\r\n          {\r\n            name: \"Sweden\",\r\n            value: [4947, 0.5304308852952593, \"Sweden\"],\r\n          },\r\n          {\r\n            name: \"Norway\",\r\n            value: [4863, 0.52142417529631, \"Norway\"],\r\n          },\r\n          {\r\n            name: \"Australia\",\r\n            value: [4862, 0.5213169525582273, \"Australia\"],\r\n          },\r\n          {\r\n            name: \"Czechia\",\r\n            value: [3508, 0.37613736519421254, \"Czechia\"],\r\n          },\r\n          {\r\n            name: \"Ireland\",\r\n            value: [3447, 0.3695967781711661, \"Ireland\"],\r\n          },\r\n          {\r\n            name: \"Denmark\",\r\n            value: [3290, 0.35276280829217765, \"Denmark\"],\r\n          },\r\n          {\r\n            name: \"Chile\",\r\n            value: [3031, 0.3249921191287509, \"Chile\"],\r\n          },\r\n          {\r\n            name: \"Malaysia\",\r\n            value: [2908, 0.31180372234457526, \"Malaysia\"],\r\n          },\r\n          {\r\n            name: \"Russia\",\r\n            value: [2777, 0.2977575436557378, \"Russia\"],\r\n          },\r\n          {\r\n            name: \"Ecuador\",\r\n            value: [2748, 0.29464808425133865, \"Ecuador\"],\r\n          },\r\n          {\r\n            name: \"Poland\",\r\n            value: [2554, 0.2738468730632893, \"Poland\"],\r\n          },\r\n          {\r\n            name: \"Romania\",\r\n            value: [2460, 0.2637679356835128, \"Romania\"],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        time: 11,\r\n        data: [\r\n          {\r\n            name: \"United States\",\r\n            value: [428654, 28.959194703418458, \"United States\"],\r\n          },\r\n          {\r\n            name: \"Spain\",\r\n            value: [148220, 10.013511687609782, \"Spain\"],\r\n          },\r\n          {\r\n            name: \"Italy\",\r\n            value: [139422, 9.419132549655451, \"Italy\"],\r\n          },\r\n          {\r\n            name: \"Germany\",\r\n            value: [113296, 7.654100797189569, \"Germany\"],\r\n          },\r\n          {\r\n            name: \"France\",\r\n            value: [83057, 5.61120118902851, \"France\"],\r\n          },\r\n          {\r\n            name: \"China\",\r\n            value: [82809, 5.59444669639238, \"China\"],\r\n          },\r\n          {\r\n            name: \"Iran\",\r\n            value: [64586, 4.363329279827051, \"Iran\"],\r\n          },\r\n          {\r\n            name: \"United Kingdom\",\r\n            value: [61474, 4.153087420618835, \"United Kingdom\"],\r\n          },\r\n          {\r\n            name: \"Turkey\",\r\n            value: [38226, 2.582488852857722, \"Turkey\"],\r\n          },\r\n          {\r\n            name: \"Belgium\",\r\n            value: [23403, 1.5810701256586948, \"Belgium\"],\r\n          },\r\n          {\r\n            name: \"Switzerland\",\r\n            value: [23280, 1.5727604377786786, \"Switzerland\"],\r\n          },\r\n          {\r\n            name: \"Netherlands\",\r\n            value: [20682, 1.3972436157276045, \"Netherlands\"],\r\n          },\r\n          {\r\n            name: \"Canada\",\r\n            value: [19141, 1.2931360626942305, \"Canada\"],\r\n          },\r\n          {\r\n            name: \"Brazil\",\r\n            value: [16170, 1.092419943250912, \"Brazil\"],\r\n          },\r\n          {\r\n            name: \"Portugal\",\r\n            value: [13141, 0.8877854344007566, \"Portugal\"],\r\n          },\r\n          {\r\n            name: \"Austria\",\r\n            value: [12942, 0.8743413052290231, \"Austria\"],\r\n          },\r\n          {\r\n            name: \"Korea, South\",\r\n            value: [10384, 0.7015268206999055, \"Korea, South\"],\r\n          },\r\n          {\r\n            name: \"Israel\",\r\n            value: [9404, 0.6353195514119714, \"Israel\"],\r\n          },\r\n          {\r\n            name: \"Russia\",\r\n            value: [8672, 0.5858667747601676, \"Russia\"],\r\n          },\r\n          {\r\n            name: \"Sweden\",\r\n            value: [8419, 0.5687744899337928, \"Sweden\"],\r\n          },\r\n          {\r\n            name: \"Norway\",\r\n            value: [6086, 0.4111606539656803, \"Norway\"],\r\n          },\r\n          {\r\n            name: \"Ireland\",\r\n            value: [6074, 0.41034995270909336, \"Ireland\"],\r\n          },\r\n          {\r\n            name: \"Australia\",\r\n            value: [6010, 0.406026212673963, \"Australia\"],\r\n          },\r\n          {\r\n            name: \"India\",\r\n            value: [5916, 0.39967571949736524, \"India\"],\r\n          },\r\n          {\r\n            name: \"Denmark\",\r\n            value: [5597, 0.3781245777597622, \"Denmark\"],\r\n          },\r\n          {\r\n            name: \"Chile\",\r\n            value: [5546, 0.3746790974192677, \"Chile\"],\r\n          },\r\n          {\r\n            name: \"Czechia\",\r\n            value: [5312, 0.35887042291582216, \"Czechia\"],\r\n          },\r\n          {\r\n            name: \"Poland\",\r\n            value: [5205, 0.3516416700445886, \"Poland\"],\r\n          },\r\n          {\r\n            name: \"Romania\",\r\n            value: [4761, 0.3216457235508715, \"Romania\"],\r\n          },\r\n          {\r\n            name: \"Ecuador\",\r\n            value: [4450, 0.3006350493176598, \"Ecuador\"],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        time: 12,\r\n        data: [\r\n          {\r\n            name: \"United States\",\r\n            value: [636350, 30.95831391394625, \"United States\"],\r\n          },\r\n          {\r\n            name: \"Spain\",\r\n            value: [177644, 8.642348891221918, \"Spain\"],\r\n          },\r\n          {\r\n            name: \"Italy\",\r\n            value: [165155, 8.0347612704609, \"Italy\"],\r\n          },\r\n          {\r\n            name: \"Germany\",\r\n            value: [134753, 6.5557093971022224, \"Germany\"],\r\n          },\r\n          {\r\n            name: \"France\",\r\n            value: [133585, 6.498886405585778, \"France\"],\r\n          },\r\n          {\r\n            name: \"United Kingdom\",\r\n            value: [99483, 4.839830192663023, \"United Kingdom\"],\r\n          },\r\n          {\r\n            name: \"China\",\r\n            value: [83356, 4.055254521271161, \"China\"],\r\n          },\r\n          {\r\n            name: \"Iran\",\r\n            value: [76389, 3.716311214854153, \"Iran\"],\r\n          },\r\n          {\r\n            name: \"Turkey\",\r\n            value: [69392, 3.37590841379203, \"Turkey\"],\r\n          },\r\n          {\r\n            name: \"Belgium\",\r\n            value: [33573, 1.633320457347242, \"Belgium\"],\r\n          },\r\n          {\r\n            name: \"Brazil\",\r\n            value: [28320, 1.3777629449877549, \"Brazil\"],\r\n          },\r\n          {\r\n            name: \"Netherlands\",\r\n            value: [28316, 1.3775683457017396, \"Netherlands\"],\r\n          },\r\n          {\r\n            name: \"Canada\",\r\n            value: [28209, 1.3723628148008324, \"Canada\"],\r\n          },\r\n          {\r\n            name: \"Switzerland\",\r\n            value: [26336, 1.281241699124206, \"Switzerland\"],\r\n          },\r\n          {\r\n            name: \"Russia\",\r\n            value: [24490, 1.191434128628182, \"Russia\"],\r\n          },\r\n          {\r\n            name: \"Portugal\",\r\n            value: [18091, 0.8801239208253345, \"Portugal\"],\r\n          },\r\n          {\r\n            name: \"Austria\",\r\n            value: [14336, 0.6974438410785471, \"Austria\"],\r\n          },\r\n          {\r\n            name: \"Ireland\",\r\n            value: [12547, 0.6104093104082401, \"Ireland\"],\r\n          },\r\n          {\r\n            name: \"Israel\",\r\n            value: [12501, 0.6081714186190651, \"Israel\"],\r\n          },\r\n          {\r\n            name: \"India\",\r\n            value: [12322, 0.599463100569884, \"India\"],\r\n          },\r\n          {\r\n            name: \"Sweden\",\r\n            value: [11927, 0.5802464210758811, \"Sweden\"],\r\n          },\r\n          {\r\n            name: \"Peru\",\r\n            value: [11475, 0.5582567017561613, \"Peru\"],\r\n          },\r\n          {\r\n            name: \"Korea, South\",\r\n            value: [10591, 0.5152502595467977, \"Korea, South\"],\r\n          },\r\n          {\r\n            name: \"Chile\",\r\n            value: [8273, 0.40247997330097796, \"Chile\"],\r\n          },\r\n          {\r\n            name: \"Japan\",\r\n            value: [8100, 0.39406355418081973, \"Japan\"],\r\n          },\r\n          {\r\n            name: \"Ecuador\",\r\n            value: [7858, 0.3822902973768989, \"Ecuador\"],\r\n          },\r\n          {\r\n            name: \"Poland\",\r\n            value: [7582, 0.36886294664184877, \"Poland\"],\r\n          },\r\n          {\r\n            name: \"Romania\",\r\n            value: [7216, 0.35105711197145617, \"Romania\"],\r\n          },\r\n          {\r\n            name: \"Denmark\",\r\n            value: [6876, 0.33451617266016254, \"Denmark\"],\r\n          },\r\n          {\r\n            name: \"Norway\",\r\n            value: [6740, 0.327899796935645, \"Norway\"],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        time: 13,\r\n        data: [\r\n          {\r\n            name: \"United States\",\r\n            value: [840351, 32.016530392903526, \"United States\"],\r\n          },\r\n          {\r\n            name: \"Spain\",\r\n            value: [208389, 7.939411926738677, \"Spain\"],\r\n          },\r\n          {\r\n            name: \"Italy\",\r\n            value: [187327, 7.136970847790315, \"Italy\"],\r\n          },\r\n          {\r\n            name: \"France\",\r\n            value: [155980, 5.942681582678063, \"France\"],\r\n          },\r\n          {\r\n            name: \"Germany\",\r\n            value: [150648, 5.739537729627418, \"Germany\"],\r\n          },\r\n          {\r\n            name: \"United Kingdom\",\r\n            value: [134638, 5.129572784514739, \"United Kingdom\"],\r\n          },\r\n          {\r\n            name: \"Turkey\",\r\n            value: [98674, 3.759380449347193, \"Turkey\"],\r\n          },\r\n          {\r\n            name: \"Iran\",\r\n            value: [85996, 3.276361362892567, \"Iran\"],\r\n          },\r\n          {\r\n            name: \"China\",\r\n            value: [83868, 3.195286696858852, \"China\"],\r\n          },\r\n          {\r\n            name: \"Russia\",\r\n            value: [57999, 2.2097037383879017, \"Russia\"],\r\n          },\r\n          {\r\n            name: \"Brazil\",\r\n            value: [45757, 1.743295814710861, \"Brazil\"],\r\n          },\r\n          {\r\n            name: \"Belgium\",\r\n            value: [41889, 1.5959288935555926, \"Belgium\"],\r\n          },\r\n          {\r\n            name: \"Canada\",\r\n            value: [41663, 1.5873185201892301, \"Canada\"],\r\n          },\r\n          {\r\n            name: \"Netherlands\",\r\n            value: [35032, 1.3346840697805993, \"Netherlands\"],\r\n          },\r\n          {\r\n            name: \"Switzerland\",\r\n            value: [28268, 1.0769824527448613, \"Switzerland\"],\r\n          },\r\n          {\r\n            name: \"Portugal\",\r\n            value: [21982, 0.8374921563689522, \"Portugal\"],\r\n          },\r\n          {\r\n            name: \"India\",\r\n            value: [21370, 0.8141755700848198, \"India\"],\r\n          },\r\n          {\r\n            name: \"Peru\",\r\n            value: [19250, 0.7334056960286748, \"Peru\"],\r\n          },\r\n          {\r\n            name: \"Ireland\",\r\n            value: [16671, 0.6351483822594306, \"Ireland\"],\r\n          },\r\n          {\r\n            name: \"Sweden\",\r\n            value: [16004, 0.609736351129502, \"Sweden\"],\r\n          },\r\n          {\r\n            name: \"Austria\",\r\n            value: [14925, 0.5686275331546998, \"Austria\"],\r\n          },\r\n          {\r\n            name: \"Israel\",\r\n            value: [14498, 0.552359261351882, \"Israel\"],\r\n          },\r\n          {\r\n            name: \"Saudi Arabia\",\r\n            value: [12772, 0.48660039219107715, \"Saudi Arabia\"],\r\n          },\r\n          {\r\n            name: \"Japan\",\r\n            value: [11512, 0.4385956557237457, \"Japan\"],\r\n          },\r\n          {\r\n            name: \"Chile\",\r\n            value: [11296, 0.43036627232934604, \"Chile\"],\r\n          },\r\n          {\r\n            name: \"Ecuador\",\r\n            value: [10850, 0.4133741195797985, \"Ecuador\"],\r\n          },\r\n          {\r\n            name: \"Korea, South\",\r\n            value: [10694, 0.40743067601717653, \"Korea, South\"],\r\n          },\r\n          {\r\n            name: \"Mexico\",\r\n            value: [10544, 0.40171582643773235, \"Mexico\"],\r\n          },\r\n          {\r\n            name: \"Poland\",\r\n            value: [10169, 0.38742870248912176, \"Poland\"],\r\n          },\r\n          {\r\n            name: \"Singapore\",\r\n            value: [10141, 0.3863619305676255, \"Singapore\"],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        time: 14,\r\n        data: [\r\n          {\r\n            name: \"United States\",\r\n            value: [1039909, 32.781050390459626, \"United States\"],\r\n          },\r\n          {\r\n            name: \"Spain\",\r\n            value: [212917, 6.711782382867629, \"Spain\"],\r\n          },\r\n          {\r\n            name: \"Italy\",\r\n            value: [203591, 6.417798893984056, \"Italy\"],\r\n          },\r\n          {\r\n            name: \"France\",\r\n            value: [166543, 5.249934826199521, \"France\"],\r\n          },\r\n          {\r\n            name: \"United Kingdom\",\r\n            value: [166441, 5.2467194802992285, \"United Kingdom\"],\r\n          },\r\n          {\r\n            name: \"Germany\",\r\n            value: [161539, 5.092193739091072, \"Germany\"],\r\n          },\r\n          {\r\n            name: \"Turkey\",\r\n            value: [117589, 3.7067579320534367, \"Turkey\"],\r\n          },\r\n          {\r\n            name: \"Russia\",\r\n            value: [99399, 3.1333545798346747, \"Russia\"],\r\n          },\r\n          {\r\n            name: \"Iran\",\r\n            value: [93657, 2.9523495194476412, \"Iran\"],\r\n          },\r\n          {\r\n            name: \"China\",\r\n            value: [83944, 2.646166629942373, \"China\"],\r\n          },\r\n          {\r\n            name: \"Brazil\",\r\n            value: [79685, 2.5119101771056656, \"Brazil\"],\r\n          },\r\n          {\r\n            name: \"Canada\",\r\n            value: [52865, 1.6664633433229716, \"Canada\"],\r\n          },\r\n          {\r\n            name: \"Belgium\",\r\n            value: [47859, 1.508659210216478, \"Belgium\"],\r\n          },\r\n          {\r\n            name: \"Netherlands\",\r\n            value: [38998, 1.2293339158783552, \"Netherlands\"],\r\n          },\r\n          {\r\n            name: \"Peru\",\r\n            value: [33931, 1.0696068798314906, \"Peru\"],\r\n          },\r\n          {\r\n            name: \"India\",\r\n            value: [33062, 1.0422133936809626, \"India\"],\r\n          },\r\n          {\r\n            name: \"Switzerland\",\r\n            value: [29407, 0.9269968322538282, \"Switzerland\"],\r\n          },\r\n          {\r\n            name: \"Ecuador\",\r\n            value: [24675, 0.7778300008794917, \"Ecuador\"],\r\n          },\r\n          {\r\n            name: \"Portugal\",\r\n            value: [24505, 0.7724710910456715, \"Portugal\"],\r\n          },\r\n          {\r\n            name: \"Saudi Arabia\",\r\n            value: [21402, 0.6746552250789415, \"Saudi Arabia\"],\r\n          },\r\n          {\r\n            name: \"Sweden\",\r\n            value: [20302, 0.6399799261542225, \"Sweden\"],\r\n          },\r\n          {\r\n            name: \"Ireland\",\r\n            value: [20253, 0.6384352992021214, \"Ireland\"],\r\n          },\r\n          {\r\n            name: \"Mexico\",\r\n            value: [17799, 0.5610778596009756, \"Mexico\"],\r\n          },\r\n          {\r\n            name: \"Israel\",\r\n            value: [15834, 0.4991351665218185, \"Israel\"],\r\n          },\r\n          {\r\n            name: \"Singapore\",\r\n            value: [15641, 0.49305122771048143, \"Singapore\"],\r\n          },\r\n          {\r\n            name: \"Pakistan\",\r\n            value: [15525, 0.4893945598238747, \"Pakistan\"],\r\n          },\r\n          {\r\n            name: \"Austria\",\r\n            value: [15402, 0.48551723094411064, \"Austria\"],\r\n          },\r\n          {\r\n            name: \"Chile\",\r\n            value: [14885, 0.4692198404494927, \"Chile\"],\r\n          },\r\n          {\r\n            name: \"Japan\",\r\n            value: [13895, 0.4380120714172457, \"Japan\"],\r\n          },\r\n          {\r\n            name: \"Belarus\",\r\n            value: [13181, 0.4155046501152008, \"Belarus\"],\r\n          },\r\n        ],\r\n      },\r\n    ];\r\n\r\n    let option1 = {\r\n      baseOption: {\r\n        animationDurationUpdate: 1000,\r\n        animationEasingUpdate: \"quinticInOut\",\r\n        timeline: {\r\n          axisType: \"category\",\r\n          orient: \"vertical\",\r\n          autoPlay: true,\r\n          inverse: true,\r\n          playInterval: 1000,\r\n          left: null,\r\n          right: 5,\r\n          top: 20,\r\n          bottom: 20,\r\n          width: 46,\r\n          height: null,\r\n          label: {\r\n            normal: {\r\n              textStyle: {\r\n                color: \"#ddd\",\r\n              },\r\n            },\r\n            emphasis: {\r\n              textStyle: {\r\n                color: \"#fff\",\r\n              },\r\n            },\r\n          },\r\n          symbol: \"none\",\r\n          lineStyle: {\r\n            color: \"#555\",\r\n          },\r\n          checkpointStyle: {\r\n            color: \"#bbb\",\r\n            borderColor: \"#777\",\r\n            borderWidth: 1,\r\n          },\r\n          controlStyle: {\r\n            showNextBtn: false,\r\n            showPrevBtn: false,\r\n            normal: {\r\n              color: \"#666\",\r\n              borderColor: \"#666\",\r\n            },\r\n            emphasis: {\r\n              color: \"#aaa\",\r\n              borderColor: \"#aaa\",\r\n            },\r\n          },\r\n          data: data.map(function (ele) {\r\n            return ele.time;\r\n          }),\r\n        },\r\n        backgroundColor: \"#404a59\",\r\n        title: {\r\n          text: \"新冠病毒全球确诊病例变化情况\",\r\n          subtext: \"以一周为周期\",\r\n          left: \"center\",\r\n          top: \"top\",\r\n          textStyle: {\r\n            fontSize: 25,\r\n            color: \"rgba(255,255,255, 0.9)\",\r\n          },\r\n        },\r\n        tooltip: {\r\n          formatter: function (params) {\r\n            if (\"value\" in params.data) {\r\n              return params.data.value[2] + \": \" + params.data.value[0];\r\n            }\r\n          },\r\n        },\r\n        grid: {\r\n          left: \"8%\",\r\n          right: \"45%\",\r\n          top: \"70%\",\r\n          bottom: 20,\r\n        },\r\n        xAxis: {},\r\n        yAxis: {},\r\n        series: [\r\n          {\r\n            id: \"map\",\r\n            type: \"map\",\r\n            mapType: \"world\",\r\n            top: \"10%\",\r\n            bottom: \"25%\",\r\n            left: 10,\r\n            itemStyle: {\r\n              normal: {\r\n                areaColor: \"#323c48\",\r\n                borderColor: \"#404a59\",\r\n              },\r\n              emphasis: {\r\n                label: {\r\n                  show: true,\r\n                },\r\n                areaColor: \"rgba(255,255,255, 0.5)\",\r\n              },\r\n            },\r\n            data: [],\r\n          },\r\n          {\r\n            id: \"bar\",\r\n            type: \"bar\",\r\n            tooltip: {\r\n              show: true,\r\n            },\r\n            label: {\r\n              normal: {\r\n                show: true,\r\n                position: \"right\",\r\n                textStyle: {\r\n                  color: \"#ddd\",\r\n                },\r\n              },\r\n            },\r\n            data: [],\r\n          },\r\n          {\r\n            id: \"pie\",\r\n            type: \"pie\",\r\n            radius: [\"8%\", \"20%\"],\r\n            center: [\"75%\", \"85%\"],\r\n            roseType: \"radius\",\r\n            tooltip: {\r\n              formatter: \"{b} {d}%\",\r\n            },\r\n            data: [],\r\n            label: {\r\n              normal: {\r\n                textStyle: {\r\n                  color: \"#ddd\",\r\n                },\r\n              },\r\n            },\r\n            labelLine: {\r\n              normal: {\r\n                lineStyle: {\r\n                  color: \"#ddd\",\r\n                },\r\n              },\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                borderColor: \"rgba(0,0,0,0.3)\",\r\n                borderSize: 1,\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      options: [],\r\n    };\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      //计算其余国家确诊人数\r\n      var restPercent = 100;\r\n      var restValue = 0;\r\n      data[i].data.forEach(function (ele) {\r\n        restPercent = restPercent - ele.value[1];\r\n      });\r\n      restValue =\r\n        data[i].data[0].value[0] * (restPercent / data[i].data[0].value[1]);\r\n      console.log(restPercent);\r\n      console.log(restValue);\r\n      option1.options.push({\r\n        visualMap: [\r\n          {\r\n            dimension: 0,\r\n            left: 10,\r\n            itemWidth: 12,\r\n            min: data[i].data[29].value[0],\r\n            max: data[i].data[0].value[0],\r\n            text: [\"High\", \"Low\"],\r\n            textStyle: {\r\n              color: \"#ddd\",\r\n            },\r\n            inRange: {\r\n              color: [\"lightskyblue\", \"yellow\", \"orangered\", \"red\"],\r\n            },\r\n          },\r\n        ],\r\n        xAxis: {\r\n          type: \"value\",\r\n          boundaryGap: [0, 0.1],\r\n          axisLabel: {\r\n            show: false,\r\n          },\r\n        },\r\n        yAxis: {\r\n          type: \"category\",\r\n          axisLabel: {\r\n            show: false,\r\n            textStyle: {\r\n              color: \"#ddd\",\r\n            },\r\n          },\r\n          data: data[i].data\r\n            .map(function (ele) {\r\n              return ele.value[2];\r\n            })\r\n            .reverse(),\r\n        },\r\n        series: [\r\n          {\r\n            id: \"map\",\r\n            data: data[i].data,\r\n          },\r\n          // 显示左下角的条形图\r\n          {\r\n            id: \"bar\",\r\n            data: data[i].data.map(function (ele) {\r\n              return ele.value[0];\r\n            }), //.sort(function(a, b) {\r\n            // return a > b\r\n            // })\r\n          },\r\n          // 显示饼图\r\n          {\r\n            id: \"pie\",\r\n            data: data[i].data\r\n              .map(function (ele) {\r\n                return {\r\n                  name: ele.value[2],\r\n                  value: ele.value,\r\n                };\r\n              })\r\n              .concat({\r\n                name: \"其他国家\",\r\n                value: restValue,\r\n              }),\r\n          },\r\n        ],\r\n      });\r\n    }\r\n\r\n    if (option1) {\r\n      myChart1.setOption(option1);\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.card {\r\n  height: 690px;\r\n}\r\n.bxo1 {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n#main {\r\n  width: 700px;\r\n  height: 600px;\r\n}\r\n#main1 {\r\n  width: 700px;\r\n  height: 600px;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AnalyseMap.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AnalyseMap.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AnalyseMap.vue?vue&type=template&id=3a7822b5&scoped=true&\"\nimport script from \"./AnalyseMap.vue?vue&type=script&lang=js&\"\nexport * from \"./AnalyseMap.vue?vue&type=script&lang=js&\"\nimport style0 from \"./AnalyseMap.vue?vue&type=style&index=0&id=3a7822b5&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3a7822b5\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.es/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, arity: 1, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  concat: function concat(arg) {\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = lengthOfArrayLike(E);\n        doesNotExceedSafeInteger(n + len);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        doesNotExceedSafeInteger(n + 1);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call -- required for testing\n    method.call(null, argument || function () { return 1; }, 1);\n  });\n};\n","var arraySlice = require('../internals/array-slice-simple');\n\nvar floor = Math.floor;\n\nvar mergeSort = function (array, comparefn) {\n  var length = array.length;\n  var middle = floor(length / 2);\n  return length < 8 ? insertionSort(array, comparefn) : merge(\n    array,\n    mergeSort(arraySlice(array, 0, middle), comparefn),\n    mergeSort(arraySlice(array, middle), comparefn),\n    comparefn\n  );\n};\n\nvar insertionSort = function (array, comparefn) {\n  var length = array.length;\n  var i = 1;\n  var element, j;\n\n  while (i < length) {\n    j = i;\n    element = array[i];\n    while (j && comparefn(array[j - 1], element) > 0) {\n      array[j] = array[--j];\n    }\n    if (j !== i++) array[j] = element;\n  } return array;\n};\n\nvar merge = function (array, left, right, comparefn) {\n  var llength = left.length;\n  var rlength = right.length;\n  var lindex = 0;\n  var rindex = 0;\n\n  while (lindex < llength || rindex < rlength) {\n    array[lindex + rindex] = (lindex < llength && rindex < rlength)\n      ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]\n      : lindex < llength ? left[lindex++] : right[rindex++];\n  } return array;\n};\n\nmodule.exports = mergeSort;\n","var DESCRIPTORS = require('../internals/descriptors');\nvar FUNCTION_NAME_EXISTS = require('../internals/function-name').EXISTS;\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar functionToString = uncurryThis(FunctionPrototype.toString);\nvar nameRE = /function\\b(?:\\s|\\/\\*[\\S\\s]*?\\*\\/|\\/\\/[^\\n\\r]*[\\n\\r]+)*([^\\s(/]*)/;\nvar regExpExec = uncurryThis(nameRE.exec);\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.es/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !FUNCTION_NAME_EXISTS) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return regExpExec(nameRE, functionToString(this))[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n","var bind = require('../internals/function-bind-context');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = uncurryThis([].push);\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var IS_FILTER_REJECT = TYPE == 7;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that);\n    var length = lengthOfArrayLike(self);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push(target, value);      // filter\n        } else switch (TYPE) {\n          case 4: return false;             // every\n          case 7: push(target, value);      // filterReject\n        }\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.es/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.es/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.es/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.es/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.es/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.es/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.es/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6),\n  // `Array.prototype.filterReject` method\n  // https://github.com/tc39/proposal-array-filtering\n  filterReject: createMethod(7)\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var UA = require('../internals/engine-user-agent');\n\nmodule.exports = /MSIE|Trident/.test(UA);\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es-x/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(argument) {\n  return classof(argument) == 'Array';\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar isArray = require('../internals/is-array');\nvar isConstructor = require('../internals/is-constructor');\nvar isObject = require('../internals/is-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar createProperty = require('../internals/create-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar un$Slice = require('../internals/array-slice');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');\n\nvar SPECIES = wellKnownSymbol('species');\nvar $Array = Array;\nvar max = Math.max;\n\n// `Array.prototype.slice` method\n// https://tc39.es/ecma262/#sec-array.prototype.slice\n// fallback for not array-like ES3 strings and DOM objects\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  slice: function slice(start, end) {\n    var O = toIndexedObject(this);\n    var length = lengthOfArrayLike(O);\n    var k = toAbsoluteIndex(start, length);\n    var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n    var Constructor, result, n;\n    if (isArray(O)) {\n      Constructor = O.constructor;\n      // cross-realm fallback\n      if (isConstructor(Constructor) && (Constructor === $Array || isArray(Constructor.prototype))) {\n        Constructor = undefined;\n      } else if (isObject(Constructor)) {\n        Constructor = Constructor[SPECIES];\n        if (Constructor === null) Constructor = undefined;\n      }\n      if (Constructor === $Array || Constructor === undefined) {\n        return un$Slice(O, k, fin);\n      }\n    }\n    result = new (Constructor === undefined ? $Array : Constructor)(max(fin - k, 0));\n    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);\n    result.length = n;\n    return result;\n  }\n});\n"],"sourceRoot":""}